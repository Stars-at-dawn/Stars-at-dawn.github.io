<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>晨星的博客</title>
  
  
  <link href="https://stars-at-dawn.github.io/atom.xml" rel="self"/>
  
  <link href="https://stars-at-dawn.github.io/"/>
  <updated>2024-11-02T02:30:48.457Z</updated>
  <id>https://stars-at-dawn.github.io/</id>
  
  <author>
    <name>长夜有晨星</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>金融</title>
    <link href="https://stars-at-dawn.github.io/posts/5d89d8bb"/>
    <id>https://stars-at-dawn.github.io/posts/5d89d8bb</id>
    <published>2024-11-02T02:29:10.000Z</published>
    <updated>2024-11-02T02:30:48.457Z</updated>
    
    <content type="html"><![CDATA[<h1>经济术语分析</h1><hr><h2 id="社会金融"><strong>社会金融</strong></h2><hr><h3 id="社会：">社会：</h3><h4 id="通缩-通胀-滞胀："><strong>通缩|通胀|滞胀：</strong></h4><p><strong>通缩：全称通货紧缩</strong><br>指货币流通数量减少，<strong>指整体物价水平持续下跌的经济现象</strong></p><p>“<strong>好的通缩</strong>”指的是由于劳动生产率提高使总供给增加引起的一般物价水平下降，不会引起“<strong><a href="%E5%9C%A8%E8%B4%A7%E5%B8%81%E5%8D%87%E5%80%BC%E7%9A%84%E9%80%9F%E5%BA%A6%E8%B6%85%E8%BF%87%E5%90%8D%E4%B9%89%E5%80%BA%E5%8A%A1%E5%81%BF%E8%BF%98%E9%80%9F%E5%BA%A6%E7%9A%84%E6%83%85%E5%BD%A2%E4%B8%8B%EF%BC%8C%E5%80%BA%E5%8A%A1%E6%B8%85%E5%81%BF%E4%B8%8D%E4%BD%86%E4%B8%8D%E8%83%BD%E5%BD%BB%E5%BA%95%E5%9C%B0%E6%B8%85%E5%81%BF%E5%80%BA%E5%8A%A1%EF%BC%8C%E5%8F%8D%E8%80%8C%E4%BD%BF%E5%BE%97%E5%B0%9A%E6%9C%AA%E5%81%BF%E8%BF%98%E7%9A%84%E5%90%8D%E4%B9%89%E5%80%BA%E5%8A%A1%E7%9A%84%E7%9C%9F%E5%AE%9E%E8%A7%84%E6%A8%A1%E5%8A%A0%E5%A4%A7%E3%80%82%E8%BF%99%E6%A0%B7%EF%BC%8C%E7%BB%8F%E6%B5%8E%E8%90%A7%E6%9D%A1%E5%8F%AA%E4%BC%9A%E7%BB%A7%E7%BB%AD%E6%81%B6%E5%8C%96%E8%80%8C%E4%B8%8D%E6%98%AF%E5%A5%BD%E8%BD%AC%E3%80%82">债务-通缩</a></strong>”，物价水平的下降也不会带来经济衰退。<br>“<strong>坏的通缩</strong>”是指由于总需求不足引起物价水平下降，而且存在“债务-紧缩”的恶性循环，<strong>最终形成“通缩-经济衰退”的自我强化</strong>。</p><p><strong>通胀：全称通货膨胀</strong><br>物价水平持续上升，钱的购买力下降，钱越来越不值钱</p><p><strong>滞胀：停滞性通货膨胀</strong><br>特指经济停滞（stagnation），失业及通货膨胀（inflation）同时持续高涨的经济现象。</p><hr><h4 id="CPI-PPIPMI："><strong>CPI|PPIPMI：</strong></h4><p><strong>CPI：居民消费价格指数</strong><br>主要从<strong>消费者角度</strong>反映价格总水平的变化。如果CPI升高，说明居民买同样东西支付的货币多了。<br>主要涵盖了<strong>食品</strong>、烟酒、衣服、居住、生活服务、交通通信、教育文娱医疗保健等方面，<strong>反映了经济社会的通货膨胀状态</strong>。</p><p><strong>PPI：生产资料（生产者出厂）价格指数</strong><br>是某个时期内工业产品第一次出售时的价格变动值，<br>从<strong>生产者角度</strong>反映市场价格变化。 如果PPI升高了，说明企业生产成本高了。<br>其调查涵盖了40个工业大类和1300多个基本分类的工业产品价格。PPI可以分为<strong>生产资料和生活资料</strong>两大类。</p><p><strong>PPI与CPI不同的是，</strong><br><strong>影响PPI的主要是生产资料，而影响CPI的主要是食品项，食品项与生活资料关系更密切</strong>。<br>在生产-<strong>需求传导渠道顺畅</strong>的时候，<strong>CPI和PPI的走势自然比较一致</strong>。<br>但是在<strong>需求不旺</strong>时，生产端的价格波动难以向需求端传导，<strong>受损的只能是企业</strong>。</p><p><strong>PMI：采购经理人指数</strong><br>信息量很大，PMI反映的经济信息非常全面，从需求到价格，从价格到生产，从生产到库存，应有尽有。<br><strong>PMI等于50是经济强弱的临界点</strong></p><hr><h4 id="恩格尔系数">恩格尔系数</h4><hr><h4 id="供给侧结构性改革："><strong>供给侧结构性改革：</strong></h4><p>旨在调整经济结构，使要素实现最优配置，提升经济增长的质量和数量。<br><strong>需求侧改革主要有投资、消费、出口三驾马车，</strong><br><strong>供给侧则有劳动力、土地、资本、制度创造、创新</strong>等要素。</p><hr><h4 id="大宗商品"><strong>大宗商品</strong></h4><p>指具有实体，可进入流通领域，但并非在零售环节进行销售，具有商品属性，用于工农业生产和消费使用的大批量买卖的物资商品。<br><strong>作为大类资产配置不可或缺的一环</strong>，其价格波动与股票、债券等资产往往呈现出较低的相关性，能够显著地帮助投资者<strong>分散风险</strong></p><p><strong>大宗商品</strong>的分类：</p><p><img src="https://xqimg.imedao.com/18f0e24010b114923feb8ac0.jpg!800.jpg" alt="img"></p><p><a href="https://xueqiu.com/S/SH510170?from=status_stock_match">商品ETF</a>列表（2024/8）：</p><p><img src="https://xqimg.imedao.com/18f0e2401bf110c13fef16a6.png!800.jpg" alt="img"></p><hr><h4 id="M0-M1-M2"><strong>M0|M1|M2</strong></h4><p><strong>M表示monetary，而M0、M1、M2是货币供应量的三个定义，分别表示流通中的现金、狭义货币供应量与广义货币供应量，俗称货币家族三兄弟。</strong></p><p><strong>M0被称为基础货币</strong>:它指的是在银行体系外流通的现金，也就是大家没有存在银行而是拿在自己手上的钱，是货币构成中流动性最强的部分</p><p><strong>M1是在M0的基础上，加上企业活期存款</strong></p><p><strong>M2则是在M1的基础上，再加上企业定期存款、个人储蓄存款和其它存款</strong>:代表了货币构成中流动性较弱的部分</p><p><strong>M0数值越高，往往说明老百姓手头越宽裕</strong>；<br><strong>M1</strong>因为是随时可取的“活钱”，因此<strong>反映了大家目前的购买力，代表着居民和企业资金松紧变化，是经济周期波动的先行指标</strong>；<br><strong>M2</strong>包含<strong>居民储蓄和企业定期存款</strong>，不是随时可以提取出来使用的，因此<strong>代表的是未来潜在的购买力，反映了社会总需求的变化和未来通货膨胀的压力状况</strong>。</p><p><strong>M2与GDP之比</strong>：<br>M2/GDP是常用的衡量<strong>金融深化</strong>的指标，即广义货币(M2)与国内生产总值(GDP)的比值。比值越大，说明经济货币化的程度越高。</p><hr><h4 id="次贷-次贷危机"><strong>次贷/次贷危机</strong></h4><p><strong>次贷</strong>即“<a href="https://baike.baidu.com/item/%E6%AC%A1%E7%BA%A7%E6%8A%B5%E6%8A%BC%E8%B4%B7%E6%AC%BE/6712821?fromModule=lemma_inlink">次级抵押贷款</a>”（subprime mortgage loan） ，“次”的意思是指：与“高”、“优”相对应的，形容较差的一方，在“次贷危机”一词中指的是信用低，还债能力低。<br><strong>次级抵押贷款</strong>是指一些贷款机构向信用程度较差和收入不高的借款人提供的贷款。</p><p>在2006年之前的5年里，由于美国住房市场持续繁荣，加上前几年美国利率水平较低，美国的次级抵押贷款市场迅速发展。<br>随着美国<strong>住房市场的降温尤其是短期利率的提高，次贷还款利率也大幅上升</strong>，购房者的还贷负担大为加重。同时，住房市场的持续降温也使购房者出售住房或者通过抵押住房再融资变得困难。这种局面直接导致大批次贷的借款人不能按期偿还贷款，银行收回房屋，却卖不到高价，大面积亏损，引发了次贷危机。</p><p><strong>杠杆：</strong><br>许多投资银行为了赚取暴利，采用20－30倍杠杆(Leverage)操作，假设一个银行A自身资产为30亿，30倍杠杆就是900亿。也就是说，这个银行A以30亿资产为抵押去借900亿的资金用于投资，假如投资盈利5%，那么A就获得45亿的盈利，相对于A自身资产而言，这是150%的暴利。反过来，假如投资亏损5%，那么银行A赔光了自己的全部资产还欠15亿。</p><h4 id="CDS合同："><strong>CDS合同：</strong></h4><p>（credit default swap 信用违约互换）<br>由于杠杆操作高风险，所以按照正常的规定，银行不进行这样的冒险操作。所以就有人想出一个办法，把杠杆投资拿去做“保险”。这种保险就叫CDS。比如，银行A为了逃避杠杆风险就找到了机构B。机构B可能是另一家银行，也可能是保险公司，诸如此类。A对B说，你帮我的贷款做违约保险怎么样，我每年付你保险费5千万，连续10年，总共5亿，假如我的投资没有违约，那么这笔保险费你就白拿了，假如违约，你要为我赔偿。A想，如果不违约，我可以赚45亿，这里面拿出5亿用来做保险，我还能净赚40亿。如果有违约，反正有保险来赔。所以对A而言这是一笔只赚不赔的生意。B是一个精明的人，没有立即答应A的邀请，而是回去做了一个统计分析，发现违约的情况不到1%。如果做100家的生意，总计可以拿到500亿的保险金，如果其中一家违约，赔偿额最多不过50亿，即使两家违约，还能赚400亿。A,B双方都认为这笔买卖对自己有利，因此立即拍板成交，皆大欢喜。</p><p><strong>CDS市场：</strong><br>B做了这笔保险生意之后，C在旁边眼红了。C就跑到B那边说，你把这100个CDS单子卖给我怎么样，每个合同给你2亿，总共200亿。B想，我的400亿要10年才能拿到，现在一转手就有200亿，而且没有风险，何乐而不为，因此B和C马上就成交了(相当于C收到300亿保险金，承担保险责任)。 这样一来，CDS被划分成一块块的CDS，像股票一样流到了金融市场之上，可以交易和买卖。实际上C拿到这批CDS之后，并不想等上10年再收取300亿，而是把它挂牌出售，标价220亿；D看到这个产品，算了一下，400亿减去220亿，还有180亿可赚，这是“原始股”，不算贵，立即买了下来(相当于D收到280亿保险金，承担保险责任)。一转手，C赚了20亿。从此以后，这些CDS就在市场上反复的炒，现在CDS的市场总值已经炒到了62万亿美元。</p><p><strong>盈利：</strong><br>上面A,B,C,D,E,F…都在赚大钱，从根本上说，这些钱来自A以及同A相仿的投资人的盈利。而他们的盈利大半来自美国的次级贷款。次贷主要是给了普通的美国房产投资人。这些人的经济实力本来只够买自己的一套住房，但是看到房价快速上涨，动起了房产投机的主意。他们把自己的房子抵押出去，贷款买投资房。这类贷款利息要在8%－9%以上，凭他们自己的收入很难对付，不过他们可以继续把房子抵押给银行，借钱付利息，空手套白狼。此时A很高兴，他的投资在为他赚钱；B也很高兴，市场违约率很低，保险生意可以继续做；后面的C,D,E,F等等都跟着赚钱。</p><p><strong>危机</strong>：<br>房价涨到一定的程度就涨不上去了，后面没人接盘。此时房产投机人急得像热锅上的蚂蚁。房子卖不出去，高额利息要不停的付，终于到了走投无路的一天，把房子甩给了银行。此时违约就发生了。此时A感到一丝遗憾，大钱赚不着了，不过也亏不到那里，反正有B做保险。B也不担心，反正保险已经卖给了C。那么这份CDS保险在那里呢，在G手里。G刚从F手里花了300亿买下了100个CDS(相当于G收到200亿保险金，承担保险责任)，还没来得及转手，突然接到消息，这批CDS被降级，其中有20个违约，大大超出原先估计的1%到2%的违约率。每个违约要支付50亿的保险金，总共支出达1000亿。减去G收到这200亿保险金，G的亏损总计达（800亿）。虽然G是全美排行前10名的大机构，也经不起如此巨大的亏损。因此G濒临倒闭。<br>如果G倒闭，那么A花费5亿美元买的保险就泡了汤，更糟糕的是，由于A采用了杠杆原理投资，根据前面的分析，A赔光全部资产也不够还债。因此A立即面临破产的危险。<br>上面讲到的100个CDS的市场价是300亿。而CDS市场总值是62万亿，假设其中有10%的违约，那么就有6.2万亿的违约CDS。这个数字是300亿的207倍（四舍五入之后）。如果说美国government收购价值300亿的CDS之后要赔出1000亿。那么对于剩下的那些违约CDS，美国government就要赔出20.7万亿。如果不赔，就要看着A21,A22,A23等等一个接一个倒闭。以上计算所用的假设和数字同实际情况会有出入，但美国金融危机的严重性无法低估。<br>因此G,A,A2,…,A20一起来到美国财政部长面前，一把鼻涕一把眼泪地游说，G万万不能倒闭，它一倒闭大家都完了。财政部长心一软，就把G给国有化了，此后A,…,A20的保险金总计1000亿美元全部由美国纳税人支付。<br>说明：<strong>CDS合同和次贷都属于金融衍生产品，而CDS市场就是现在金融体系中一个重要的金融交易体系。</strong></p><hr><h4 id="城投债的概念"><strong>城投债的概念</strong></h4><p><strong>旧预算法禁止地方政府发债融资</strong>，1995年开始施行的旧预算法规定“除法律和国务院另有规定外，地方政府不得发行地方政府债券”，这一规定导致了地方政府无法进行直接融资。</p><p>一方面是基础设施建设的不断发展带来巨大的资金缺口，另一方面的财权的上收、债权的限制导致的地方政府没有资金来源，在这样的背景下：<br><strong>地方城投平台应运而生，城投平台承担了地方基础设施建设的融资、建设等职能</strong><br><strong>而城投平台直接融资发行的债券即是城投债。</strong></p><p>1.城投债信用风险较低<br>城投债由地方支持，与地方政府债券类似，城投债也是地方政府融资的一种方式，<strong>有一定的政府背景，风险较低</strong>。地方财政收入及债券所投项目的经营收益可以为本期债券提供充足的偿还保障。<br>2.收益具有吸引力<br>以近期发行的城投债为例，五年前AA+级城投债发行利率5.04%，比二级市场同等级企业债高出110基点。另外，多数债券利率具有期权特征，投资者具有回售权，发行者具有上调票面利率选择权，对投资者有较好的保护。<br>3.利率市场化<br>对地方政府而言，城投债既不违反现有法律法规，又绕开人大审批，筹集资金更加市场化，相对于5.94%（5年及以上）的贷款利率来说更加节省了融资成本。</p><hr><h4 id="量化宽松的货币政策"><strong>量化宽松的货币政策</strong></h4><p><strong>俗称“印钞票”</strong>，指一国货币当局通过大量印钞，购买国债或企业债券等方式，向市场注入超额资金，旨在降低市场利率，刺激经济增长。该政策通常是往常规货币政策对经济刺激无效的情况下才被货币当局采用，即<strong>存在流动性陷阱</strong>的情况下实施的非常规的货币政策。</p><h4 id="流动性陷阱："><strong>流动性陷阱：</strong></h4><p>流动性陷阱指当名义利率降低到无可再降低的地步，甚至接近于零时，由于人们对于某种“流动性偏好”的作用，宁愿以<strong>现金或储蓄的方式持有财富</strong>，而不愿意把这些财富以资本的形式作为投资，也不愿意把这些财富作为个人享乐的消费资料消费掉。<strong>国家任何货币供给量的增加</strong>，都会以“闲资”的方式被吸收，<strong>仿佛掉入了“流动性陷阱”</strong>，因而对总体需求、所得及物价均不产生任何影响。</p><hr><h4 id="P2P：借贷模式"><strong>P2P：借贷模式</strong></h4><p>P2P是英文peer to peer lending（或peer-to-peer）的缩写，意即个人对个人（伙伴对伙伴）。又称点对点网络借款，<strong>是一种将小额资金聚集起来借贷给有资金需求人群的一种民间小额借贷模式</strong></p><hr><p><strong>市场经济  中央计划经济</strong></p><p><strong>国进民退</strong></p><hr><hr><h3 id="股市：">股市：</h3><h4 id="投资-投机"><strong>投资/投机</strong></h4><p><strong>一定要明白投资与投机的区别</strong><br><strong>一定要区分  投资者   和   投机者</strong><br><strong>投资者分为两种  防御和进取</strong><br><strong>短线操作   长线投资</strong></p><ul><li><strong>股票并非仅仅是一个交易代码号或电子信号，而是表明拥有一个实实在在的企业的所有权；企业的内在价值并不依赖于其股票价格。</strong></li><li><strong>市场就像一只钟摆，永远在短命的乐观（它使得股票过于昂贵）和不合理的悲观（它使得股票过于廉价）之间摆动。聪明的投资者则是现实主义者，他们向乐观主义者卖出股票，并从悲观主义者手中买进股票。</strong></li><li><strong>每一笔投资的未来价值是其现在价格的函数。你付出的价格越高，你的回报就越少。</strong></li><li><strong>无论如何谨慎，每个投资者都免不了会犯错误。只有坚持格雷厄姆的所谓“安全性”原则——无论一笔投资看起来多么令人神往，永远都不要支付过高的价格——你才能使犯错误的几率最小化。</strong></li><li><strong>投资成功的秘诀在于你的内心。如果你在思考问题时持批判态度，不相信华尔街的所谓“事实”，并且以持久的信心进行投资，你就会获得稳定的收益，即便是在熊市亦如此。通过培养自己的约束力和勇气，你就不会让他人的情绪波动来左右你的投资目标。说到底，你的投资方式远不如你的行为方式重要。</strong></li><li><strong>忘记过去的人，必将重蹈覆辙</strong></li></ul><p>税（资本收益税等）<br><strong>中国没有资本利得税。</strong><br><strong>但是有证券投资所得税，即从事证券投资所获得的利息、股息、红利收入的征税。</strong></p><p><strong>股票投资至少应占 25%</strong><br><strong>一般来说应该和债券对半开 灵活调整</strong><br><strong>如果债券对半开综合应有6%税前收益</strong></p><p>券商交易股票有手续费 <strong>万分之五，最低五元</strong><br><strong>所以买就别只买一点，不然很亏</strong></p><hr><p><strong>度量和量化（买的时候问一问自己“它价值几何？”）</strong></p><p><strong>利率 5%</strong>   税款   <strong>高等级债券波动远远低于股票</strong></p><hr><h4 id="公司相关信息"><strong>公司相关信息</strong></h4><p><strong>公司净资产（查看资产负债表右下部分《所有者权益合计》金额）</strong><br><strong>市盈率 =每股市价/每股收益（通常为12个月的时间）</strong></p><p><strong>静态市盈率</strong>=股票现价÷当期每股收益<br><strong>预测市盈率</strong>=股票现价÷未来每股收益的预测值<br><strong>动态市盈率（TTM）</strong>=股价/过去四个季度的EPS</p><p><strong>股息（又译红利）  约3.5-4.5%   股票增值3%</strong>   综合收益7.5%<br>如果债券和股票对半开 综合应该有6%税前收益</p><hr><h4 id="证券-一二级市场"><strong>证券 一二级市场</strong></h4><p>证券：<br><strong>各种金融工具的统称，例如：股票、债券、权证和股票价款缴纳凭证等</strong></p><p><strong>一级市场投资者可以直接购买新股或新基金份额，</strong><br><strong>二级市场是投资者之间进行的股票和基金份额的交易。</strong></p><hr><h4 id="K线图-均线图"><strong>K线图/均线图</strong></h4><p>BV1EuxTe3EB6</p><p><strong>牛熊市</strong>：<br>牛市与熊市是股票市场行情预料的两种不同趋势。<br><strong>牛市是预料股市行情看涨，前景乐观的专门术语，</strong><br><strong>熊市是预料股市行情看跌，前景悲观的专门术语。</strong></p><hr><h4 id="债券"><strong>债券</strong></h4><p>债券，是一种按照国家要求的<strong>标准格式</strong>，经过国家各种部门<strong>审批通过</strong>之后，才发行出来的<strong>标准化借条</strong>。债券上写着：谁借钱、谁出钱、债券啥时候到期、利率是多少、偿还方式是啥、违约了怎么办，等等信息。因为它是标准化的，因而可以进行交易</p><p><strong>按照债券违约风险来分</strong>，可以分为<strong>利率债</strong>和<strong>信用债</strong>。<br><strong>利率债</strong>就像银行存款一样，是国家信用担保，基本不会有违约风险。比如国债，央行票据等，地方债也算是准利率债。<br><strong>信用债</strong>就是企业发的债，根据每个企业的财务状况，风险自然不一样。例如华为发的债就违约风险很小，而如果一个小的公司发行的债券，违约风险自然会大一点。</p><p>第二种分类方式，是根据<strong>交易市场来分</strong>，可以分为<strong>交易所市场和银行间市场</strong>。<br><strong>交易所市场</strong>很好理解就是这种债券会在深交所或者上交所上市，只能通过证券交易软件交易。<br><strong>银行间市场</strong>就是银行之间互相买卖，散户投资者需要500万资金才能有资格通过银行间市场进行买卖债券。</p><p><strong>高等级债券   高等级公用事业债券</strong> <strong>黄金</strong></p><p><strong>高等级债券波动远远低于股票</strong></p><p><strong>利率 5%↓</strong></p><p><strong>债券的牛熊（涨跌）</strong><br>一般不用指数来展示，而是看<strong>十年期国债收益率</strong>（还有十年就到期的国债的年化收益率）。<br><strong>债券的收益率跟十年期国债收益率成反比关系</strong>，这个很好理解，本来发行一个债券，本金是100，利息是7%，如果十年期国债收益率下降，发行个债券，本金100，利息只有5%，那么大家肯定去抢前面的债，使得前面的债价格大于100的面值。</p><hr><h4 id="指数-基金-ETF："><strong>指数|基金|ETF：</strong></h4><p><strong>深证综合指数</strong>是深圳证券交易所编制的，以深圳证券交易所挂牌上市的全部股票为计算范围，以发行量为权数的加权综合股价指数。    0和3开头股票</p><p><strong>创业板指数</strong>就是以起始日为一个基准点，按照创业板所有股票的流通市值，一个个计算当天的股价，再<strong>加权平均</strong>，与开板之日的**“基准点”比较。**<br>3开头股票   <strong>科技，医疗，新能源</strong></p><p><strong>沪深300指数</strong>是上交所和深交所于2005年4月8日联合发布的一个指数，代码为000300，<br><strong>选取了沪深两市市值大、流动性好的300只股票编制而成</strong>，每年调整2次成分股，<br><strong>沪深300指数</strong>是能够<strong>综合反映沪深两市整体走势的跨市场指数</strong><br><strong>沪深300指数</strong>可以体现出沪深两市整体市场的一个行情走势，在各个证券交易软件或支持基金买卖的软件中，经常用来作为收益对比的基准，比如全年收益高于沪深300指数的涨幅，就可以说投资者或基金跑赢了市场。可以说沪深300成分股所在的公司是我国最优质的一批公司了     平常提到的<strong>大白马</strong>概念基本都在这里面。</p><p><strong>ETF：<strong>全称</strong>交易型开放式指数基金</strong>；又被称为<strong>交易所交易基金</strong>；<strong>个人无法购买的基金</strong>；</p><p><strong>基金：</strong></p><p><strong>1.股票型基金</strong><br>股票型基金根据证监会规定，股票持仓必须在80%以上，也就是不管行情好不好，必须买满80%以上的股票，如果基金经理觉得行情不好，想将股票降低仓位到80%以下，抱歉，这是不允许的。所以股票型基金的风险较大，可能亏50%，但是牛市来了，也能翻几倍。</p><p><strong>2.混合型基金</strong><br>故名思意，混合型基金没有股票持仓限制，就看基金经理怎么搭配，股票，债券，货币理财啊 都可以往里面搭配，基金的收益完全看经理的表现。</p><p><strong>3.债券型基金</strong><br>债券持仓量80%以上的都称为债券型基金,根据持仓量多少，可以分为纯债基金和偏债基金，偏债基金有部分投资股票和理财，跟混合型基金有些重合。因为债券都是到期还本付息产品，所以短期亏损风险不大，当然如果只持有几个月到半年，也有短期亏损的风险，不过风险不大，可能一般就亏损3%左右，但是拿个一两年，还是能赚钱的，债券型基金平均年化收益6%-8%左右</p><p><strong>4.货币型基金</strong><br>货币型基金主要投资于债券、央行票据、回购等安全性极高的短期金融品种，我们常用的余额宝也就是其中的一员。目前市场上货币基金有很多个，大多收益2%到3%，相差不会太大。优点是没有短期亏损风险，每天都有收益，想取出特别方便，随存随取。</p><p><strong>5.QDII基金</strong><br>QDII基金是指在一国境内设立，经该国有关部门批准从事境外证券市场的股票、债券等有价证券业务的证券投资基金。我们有外汇管制，如果个人投资国外的股票和债券有很多限制，那么我们就通过QDII基金来进行投资。但是由于信息原因，大家对国外公司研究没有国内公司透彻，因而一般人并不适合投资QDII基金。</p><p><strong>6.指数型基金</strong><br>指数，根据某些采样股票或债券的价格所设计并计算出来的统计数据，用来衡量股票市场或债券市场的价格波动情形。股票型指数基金其实也属于我们上面说的第一种，也就是股票型基金，采取跟踪指数的方式，一般股票的持仓能达到90%以上比例。</p><p><strong>上面这种分类方式是根据基金持仓区分</strong>，除了这种分类方式，还有以下几种分类方式：</p><p><strong>1.根据购买渠道区分</strong><br>通过<strong>银行柜台，天天基金网，支付宝，基金公司APP</strong>购买的基金都叫做<strong>场外基金</strong>，交易对象都是基金公司，你交钱，基金公司给你基金份额。<br>只能<strong>通过证券交易软件的基金</strong>叫<strong>场内基金</strong>，可以向基金公司申购基金，也可以通过交易软件，投资者之间互相买卖。</p><p><strong>2.根据基金是否有固定期限区分</strong><br>可以<strong>随时赎回的叫开放式基金</strong><br>固定时间的叫<strong>封闭式基金</strong>（例如前段时间大热的蚂蚁战略配售基金封闭十八个月才能赎回）</p><p><strong>债券基金</strong><br>根据证监会规定，80%的资金拿来买债券的基金即为<strong>债券基金</strong>。</p><p>根据持有债券的<strong>到期时间</strong>，也可以分为<strong>短期债券基金和中长期债券基金</strong>。<br><strong>短债基金</strong>主要是持有到期时间为397天之内的债券的基金。<br><strong>中长期债券基金</strong>就是超过397天的。<br>短期债券基金的收益一般会低于中长期债券基金的收益<br>但是短期债券基金的波动会比长期债券基金的波动小很多。</p><p>**纯债基金 **这种基金只买债券，不买股票。<br><strong>混合债基</strong> 混合债基是既持有债券，又持有股票。</p><p>债券持有比例大于80%<br><strong>一级债基</strong>是不能到市场去买股票的，但是它可以买可转债，所以看它股票持仓如果有股票，股票是可转债转换而来的。<br><strong>二级债基就是说可以到二级市场买股票</strong>，股票持仓最大可以达到20%。股票的波动会大于债券，因而<strong>二级债基的风险大于一级债基。</strong></p><p><strong>风险性/收益性：短债基金&lt;长债基金&lt;一级债基&lt;二级债基</strong></p><p><strong>管理费和托管费:</strong><br>投资者支付给基金公司的报酬，管理费用是从基金净值中进行提取，按日计算计提，按月支付。<br><strong>基金公司在公布净值时都已经扣除这些费用，所以投资者并不会有直观的感受</strong></p><p><strong>对于货币基金和指数基金这种对基金经理要求不高或者业绩差异不明显的</strong>，省到就是赚到。<br>所以像货币基金就要挑三费（管理费、托管费、销售服务费）低的，<br>而跟踪同一指数的不同基金进行挑选时，也<strong>要把管理费和托管费作为很重要的考量因素</strong></p><hr><h4 id="股票常见操作："><strong>股票常见操作</strong>：</h4><p><strong>重仓|平仓|清仓|轻仓</strong>：<br><strong>重仓</strong>指<strong>将自己的大部分资金用来购卖股票。</strong><br><strong>清仓指（全部卖出）</strong>。<br><strong>平仓指 (卖掉的买回来，买的卖出去。 恢复之前仓位)。</strong><br><strong>轻仓指（一小部分钱买股票）。</strong></p><p><strong>卖空交易</strong>是买空交易的对称，亦称卖空。证券市场上的<strong>证券投机者</strong>利用证券价格飞涨的时机，<br>先<strong>借入大批的证券在市场上高价售出</strong><br>待将来证券价格下跌以后，再低价买回证券，归还所借证券，进而从中获利的一种证券投机交易。</p><p><strong>升水与贴水</strong>：<br><strong>远期汇率与即期汇率的差额</strong>用升水、贴水和平价来表示。<br>升水意味着远期汇率比即期的要高，贴水则反之。<br>一般情况下，利息率较高的货币远期汇率大多呈贴水，利息率较低的货币远期汇率大多呈升水。</p><hr><h4 id="成本平均法-定投"><strong>成本平均法(定投)</strong></h4><p><strong>成本平均法（定期定额策略）<strong>简单的来说就是你把需要投资的本金，分成多个定量的投资资金，并且定时的买入投资物。<strong>在市场上升时买入较少份额的“货”，在市场回落时，买多较多份额“货”</strong>，保证从长期来看，稳定的“囤货”，使得你买入的“货”的成本总体来说较低，最后在市场达到预期目标价格时卖出你的“货”，实现长期的稳定收益。<br>举个例子：如果你有100块的本金，你想要去做个股票的投资，这个时候一股的价钱在20块，你现在一笔投入，你能买到的份额就是5股。如果换个投资策略，你把100块本金分成5等份，每份本金20块，在市场波动到5块时买入4股，在市场波动到10块是买入2股，在市场回升到20块时买入1股，市场价格超过20块时就不买入，那么最终你可以获得的份额是：4+2+1=7股，从长期来讲是更能对抗市场风险的投资策略方法。<br>要注意的一点就是如果你要投资的目标是没有明显的周期性波动，那么DCA投资法可能就不是最合适的。因为DCA的</strong>逻辑就是在市场低谷时多买入，市场上涨时少买入，使得最后买入的平均价格可以较低。</strong><br>比如说一支股票一直涨，并且未来的趋势也是涨势，那么使用DCA策略就完全没有意义。因为在你投入资金确定的情况下，决定你能否囤更多货的关键是在于你是否是在前期价格还没涨起来的时候购入。<br>所以使用DCA投资策略的前提是<strong>要选择有周期性波动的投资物</strong>，这样才能保证长期稳定的收益。</p><hr><h4 id="股息-红利："><strong>股息|红利：</strong></h4><p><strong>股息（又译红利）  约3.5-4.5%</strong><br><strong>股息是股东定期按一定的比率从上市公司分取的盈利</strong><br><strong>红利则是在上市公司分派股息之后按持股比例向股东分配的剩余利润</strong></p><p>一般来讲，上市公司在财会年度结算以后，会根据股东的持股数将一部分利润作为股息分配给股东。<br>上市公司的分红派息工作一般都集中在次年的二、三季度进行。<br><strong>10派1是上市公司的一种股票分红方案，指上市公司按照每10股分给投资者1元分红。</strong><br><strong>而股票分红10派几就是指每10股派多少元的分红。</strong><br><strong>沪深股市的上市企业实行利润分配一般只采用股票红利和现金红利两种，即统称所说的送红股和派现金。</strong><br>持股超过一年的对股息红利所得免征个人所得税；持股1个月至1年的，按10%比例征收；持股1个月以内的，按20%比例征收。<br>所以短期投资者通常会在股权登记日之前卖出持股，除息日至之后再买回，来避免这种分红但还“亏钱”的情况<br><strong>1、计算除息价：</strong><br><strong>除息价＝股息登记日的收盘价－每股所分红利现金额</strong><br>例如:某股票股息登记日的收盘价是4.17元，每股送红利现金0.03元，则其次日股价为：4.17－0.03＝4.14(元)</p><p><strong>2、计算除权价：</strong><br><strong>送红股后的除权价＝股权登记日的收盘价÷(1＋每股送红股数)</strong><br>例如: 某股票股权登记日的收盘价是24.75元，每10股送3股，，即每股送红股数为0.3，则次日股价为：24.75÷(1＋0.3)=19.04(元)<br><strong>配股后的除权价＝(股权登记日的收盘价＋配股价×每股配股数)÷(1＋每股配股数)</strong><br>例如: 某股票股权登记日的收盘价为18.00元，10股配3股，即每股配股数为0.3，配股价为每股6.00元，则次日股价为(18.00＋6.00×0.3)÷(1＋0.3)=15.23(元)</p><p><strong>3、计算除权除息价：</strong><br><strong>除权除息价＝(股权登记日的收盘价－每股所分红利现金额＋配股价×每股配股数)÷(1＋每股送红股数＋每股配股数)</strong><br>例如: 某股票股权登记日的收盘价为20.35元，每10股派发现金红利4.00元，送1股，配2股，配股价为5.50元/股，即每股分红0.4元，送0.1股，配0.2股，则次日除权除息价为(20.35－0.4＋5.50×0.2)÷(1＋0.1＋0.2)＝16.19(元)。</p><hr><h4 id="期货-现货-期权">期货|现货|期权</h4><p><strong>现货</strong>是实实在在可以交易的货（商品）<br><strong>期货</strong>主要不是货，而是以某种大宗产品如棉花、大豆、石油等及金融资产如股票、债券等为标的标准化可交易合约。因此，这个标的物可以是某种商品（例如黄金、原油、农产品），也可以是金融工具。<br>交收期货的日子可以是一星期之后，一个月之后，三个月之后，甚至一年之后。买卖期货的合同或协议叫做期货合约。买卖期货的场所叫做期货市场。投资者可以对期货进行投资或投机。</p><p><strong>期权</strong>：期权交易是指在未来一定时期可以买卖的权利，是买方向卖方支付一定数量的权利金后拥有的在未来一段时间内或未来某一特定日期以事先商定的价格向卖方购买或出售一定数量标的物的权利，但不负有必须买进或卖出的义务。</p><p>按<strong>期权的权利</strong>划分，有<strong>看涨期权</strong>和<strong>看跌期权</strong>两种类型。<br>按<strong>期权的种类</strong>划分，有<strong>欧式期权</strong>和<strong>美式期权</strong>两种类型。<br>按行权<strong>时间</strong>划分，有<strong>欧式期权、美式期权、百慕大期权</strong>三种类型。</p><p>**套期保值 **俗称“海琴” 又称对冲贸易<br><strong>股指期货买入套期保值</strong>是指投资者因担心目标指数或股票组合价格上涨而买入相应股指期货合约进行套期保值的一种交易方式，即在期货市场上首先建立多头交易部位（头寸），在套期保值期结束时再对冲掉的交易行为，因此也称为“多头保值”。指交易人在买进（或卖出） 实际货物的同时，在期货交易所卖出（或买进） 同等数量的期货交易合同作为保值。<br>可买入股指期货合约便能对冲股票价格上涨的风险，由于股指期货交易具有杠杆机制，买入股指期货合约所需的资金量较小。<br><strong>股指期货卖出套期保值是</strong>指投资者以因担心目标指数或股票组合价格下跌而卖出相应股指期货合约的一种保值方式，即在期货市场上先开仓卖出股指期货合约，待下跌后再买入平仓的交易行为，因此又称为“空头保值”。</p><hr><h4 id="股票特殊名称"><strong>股票特殊名称</strong>:</h4><p><strong>白马股</strong>：是指<strong>长期绩优、回报率高并具有较高投资价值的股票</strong>。因其有关的信息已经公开，业绩较为明朗，同时又兼有业绩优良、高成长、低风险的特点，因而具备较高的投资价值，往往为投资者所看好。<br><strong>医药、消费、科技、金融</strong>这四个行业，是最容易出现长线白马股的行业。<br><strong>恒瑞医药、贵州茅台、腾讯控股、中国平安</strong>等四家上市公司都是众人皆知的大白马股。</p><p><strong>蓝筹股(Blue Chips)：是指长期稳定增长的、大型的、传统工业股及金融股</strong>。“蓝筹”一词源于西方赌场，在西方赌场中，有三种颜色的筹码、其中蓝色筹码最为值钱。证券市场上通常将那些经营业绩较好，具有稳定且较高的现金股利支付的公司股票称为“蓝筹股”。</p><p>成长股  龙头股 普通股</p><hr><h3 id="住房">住房</h3><h4 id="租住比-2-300-1"><strong>租住比-2/300:1</strong></h4><h4 id="按揭贷款"><strong>按揭贷款</strong></h4><p><strong>按揭</strong>是指按揭人将房产产权转让按揭，受益人作为还贷保证人在按揭人还清贷款后，受益人立即将所涉及的房屋产权转让按揭人，过程中按揭人享有使用权。<br><strong>按揭贷款</strong>是指以按揭方式进行的一种贷款业务。</p><hr><hr><h2 id="生活金融"><strong>生活金融</strong></h2><h3 id="公司">公司</h3><h4 id="注册企业："><strong>注册企业</strong>：</h4><ul><li>企业名字</li><li>地址</li><li>法人</li><li><strong>经营类型</strong></li><li><strong>企业类型</strong></li></ul><hr><h4 id="ABS融资模式"><strong>ABS融资模式</strong></h4><p>ABS融资模式是以项目所属的资产为支撑的证券化融资方式，即以项目所拥有的资产为基础，以项目资产可以带来的预期收益为保证，通过在资本市场发行债券来募集资金的一种项目融资方式。</p><hr><h4 id="董事会"><strong>董事会</strong></h4><p>董事会是由董事组成的，<strong>对内掌管公司事务、对外代表公司的经营决策和业务执行机构</strong>；<br><strong>董事会  由股东（大）会选举。</strong><br>董事会设董事长一人，副董事长，<br>董事长、副董事长的产生办法由公司章程规定，一般由董事会选举产生。董事任期由章程规定，最长三年，任期届满，可连选连任，董事在任期届满前，股东会不得无故解除其职务。<br>董事会是股东会或股东大会这一权力机关的业务<strong>执行机关</strong>，负责公司或企业和业务经营活动的指挥与管理，对公司股东会或股东大会负责并报告工作。<strong>股东会或股东大会所作的决定，董事会必须执行。</strong></p><hr><h4 id="企业孵化器"><strong>企业孵化器</strong></h4><p>-&gt; <strong>低成本资金</strong><br>企业孵化器在中国也称高新技术创业服务中心，它通过为新创办的<strong>科技型中小企业</strong>提供物理空间和基础设施，提供一系列的服务支持，进而降低创业者的创业风险和创业成本，提高创业成功率，<strong>促进科技成果转化</strong>，培养成功的企业和企业家。在台湾地区叫育成中心，在欧洲一般叫创新中心（innovation center）。</p><h4 id="供应链金融"><strong>供应链金融</strong></h4><p>供应链金融，又称供应商融资或反向保理，是一种<strong>融资</strong>解决方案，<strong>供应商可以通过它提前收到付款。供应链融资降低了供应链中断的风险，使买方和供应商都能优化其营运资本。</strong></p><p>供应链中，买方和供应商存在财务冲突。<strong>买方希望尽可能晚付款，而供应商则希望尽可能早付款。</strong><br>供应链融资的出现，就是为了弥合这些利益冲突，它提供一系列融资和风险缓解方案，旨在优化国内和国际供应链中的<strong>营运资金和流动性</strong>。有些产品直接提供给供应商，有些则通过买方提供。</p><hr><p>实体行业</p><p>工资可以加上特殊部分<br>只能买指定的品牌的生活必需品（自产自销，控制资金流动性）</p><hr><hr><h3 id="经营">经营</h3><p>纳什均衡（博弈论）</p><hr><hr><h3 id="存款"><strong>存款</strong></h3><h4 id="72-70公式"><strong>72/70公式</strong></h4><p>其实所谓的“72法则”就是以1%的<strong>复利</strong>来计息，<strong>经过72年以后，本金会变成原来的一倍</strong>。这个公式好用的地方在于它能<strong>以一推十</strong>，例如：利用8%年报酬率的投资工具，经过9年(72/8)本金就变成一倍；利用12%的投资工具，则要6年左右(72/12)，就能让1元钱变成2元钱。<br>假设最初投资金额为100元，复息年利率9%，利用72法则，将72除以9，得8，即需约8年时间，投资金额滚存至200元，而准确需时为8.0432年。<br>要估计<strong>货币的购买力减半所需时间</strong>，可以把与所应用的法则相应的数字，除以通胀率。若通胀率为3.5%，应用“<strong>70法则</strong>”，每单位之货币的购买力减半的时间约为70/3.5=20年。</p><h4 id="结构性存款"><strong>结构性存款</strong></h4><p>一般来说，结构性存款的高风险部分买的都是金融衍生品，以期权为主。<br>存款那部分的收益，也就是A%。<br>期权这部分猜对了，赚钱了。再加上存款那部分的收益，整个结构性存款的收益就是B%。<br><strong>A%的值越高，B%的值越低；A%的值越低，B%的值越高。</strong></p><h4 id="风险对冲"><strong>风险对冲</strong></h4><p>风险对冲，是指通过投资或购买与标的资产（Underlying Asset）<strong>收益波动负相关的某种资产或衍生产品</strong>，来冲销标的资产潜在的风险损失的一种风险管理策略。</p><hr><h2 id="金融理论"><strong>金融理论</strong></h2><h3 id="凯恩斯主义："><strong>凯恩斯主义</strong>：</h3><p>凯恩斯主义是在肯定市场经济的基础上，主张政府通过增加赤字的方法称为市场的重要参与者，在经济谷底阶段起到增加总需求的作用。 计划经济是否认市场经济的，主张整个社会就是一家大工厂，全部经济单位都在中央统一协调下从事生产和获得的分配。<br>凯恩斯主义，是在1929年美国大萧条后，为了解决经济危机，而被凯恩斯提出来的一个刺激经济的理论。 该理论主张国家采用扩张性的经济政策，通过增加需求促进经济增长。即扩大政府开支，实行赤字财政，刺激经济，维持繁荣。</p><h3 id="弗里德曼理论-：">**弗里德曼理论 **：</h3><p>弗里德曼在理论上有三大贡献，首先是提出<strong>现代货币数量论</strong>，即<strong>通货膨胀起源于“太多的货币追逐太少的商品”</strong>。政府可以通过控制货币增长来遏制通胀。这被视为现代经济理论的一场革命。<br>其次，他创立消费函数理论，对凯恩斯经济理论中的边际消费递减规律进行驳斥。凯恩斯认为，随着社会财富和个人收入的增加，人们用于消费方面的支出呈递减趋势，与此同时储蓄则越来越多。因此政府可以通过增加公共支出来抵消个人消费的减少，从而保证经济的持续增长。弗里德曼指出，这一理论站不住脚，<strong>因为人们的欲望实际上永无止境，原有的得到满足后，新的随即产生。</strong><br>1968年，弗里德曼与美国哥伦比亚大学经济学家菲尔普同时提出“自然率假说”理论。他们发现，**长期来看，失业率与通货膨胀并没有必然联系。自然失业率永远存在，是不可消除的。**因此政府的宏观调控政策长期来看是不起任何作用的。</p><h3 id="熊彼得理论："><strong>熊彼得理论</strong>：</h3><p>(熊彼得商业周期理论)<br>熊彼特指出，每个长周期包括六个中周期，每个中周期包括三个短周期。短周期约为40个月，中周期约为9—10年，长周期为48-60年。他以重大的创新为标志划分。根据创新浪潮的起伏，熊彼特把资本主义经济的发展分为三个长波：<strong>（1）1787—1842年是产业革命发生和发展时期；（2）1842—1897年为蒸汽和钢铁时代；（3）1898年以后为电气、化学和汽车工业时代。</strong></p><hr><hr><h1>宜居城市分析</h1><h2 id="桂林">桂林</h2><p><strong>技术——解决别人的问题</strong></p><h3 id="目前处于通缩">目前处于<strong>通缩</strong></h3><p>现在满足通缩五个条件，也就是属于通缩状态，通缩状态调整需要债务落地，也就是正在落地中，未来会有一波大萧条，这个时候我们应该减少投资，购买一定的国债或者持有现金；待到债务落地，政府救急后降息印钞，这个时候就从通速改为通胀，通胀前期可以利用原有的现金购买低价商品，购买低价股票，坐收政府救急红利</p><h3 id="利用人性赚钱"><strong>利用人性</strong>赚钱</h3><p>利用<strong>人性</strong>赚钱。因地制宜<br><strong>男人最怕虚，希望买到强壮的身体；</strong><br><strong>女人最怕丑，希望买到脸蛋和身材；</strong><br><strong>小孩最怕笨，希望能买到知识；</strong><br><strong>老人最怕死，希望能买到健康。</strong></p><hr><h3 id="其它名句">其它名句</h3><p>（来自网络）</p><p>芒格说：”如果我知道我会死在哪里，那我就永远不会去那个地方！“</p><p>句句不谈薪资，条条不离奉献，桩桩不谈好处，事事皆讲境界。<br>一谈文化五千年，一说工业刚开始，一讲经济说总量，一问发展才起头。<br>工资确实低，物价确实高，福利确实少生活确实甜。</p><p>从前，有一个劫匪劫了一群人，让大家排队交钱，第一个交一百、第二个交两百，以此类推；<br>于是大家纷纷排队，第一个人得意的说：“看，哥交的比你们都少。”<br>最后大家争先恐后地交钱，连反抗都忘了。（爱情公寓·吕小布）</p><p><strong>跳蚤的来吮血，虽然可恶，而一声不响地就是一口，何等直截爽快。</strong><br><strong>蚊子便不然了，一针叮进皮肤，自然还可以算得有点彻底的，但当未叮之前，要哼哼地发一篇大议论，</strong><br><strong>却使人觉得讨厌。如果所哼的是在说明人血应该给它充饥的理由，那可更其讨厌了，幸而我不懂。</strong></p><p>一位记者到美国工厂采访，<br>记者问“工厂是谁的？”<br>工人们说“资本家的”<br>记者“那门口的汽车呢？”<br>工人“那是我们上下班开的”<br>这位记者又来到苏联工厂采访<br>记者同样问“这工厂是谁的”<br>工人们说“是我们全民所共有的！”<br>记者又问“那门口的汽车呢？”<br>工人们说“哦，那是厂长和书记们的”</p><p>还有人信他们不择手段爬上去就是为了给你当公仆的？</p><p><strong>“如果动物光吃不胖，它的肚子里一定有寄生虫；如果人民勤劳却无法致富，那个社会一定有吸血鬼。”</strong><br><strong>一鲁迅《狂人日记》</strong></p><hr><h3 id="没有管理费的大类资产配置方法">没有管理费的大类资产配置方法</h3><p><strong>来自B站评论：</strong></p><p>我列举没有管理费的大类资产配置方法：</p><ol><li>记账式中国国债，没有管理费，没有门槛。短期国债可以代替货币基金，你可以把它理解为现金。<strong>长期国债波动较大，但和股指有较好的对冲效果</strong>。</li><li>股指期货。包括上证50、沪深300、中证500、中证1000，我只推荐沪深300。50万门槛，可以借钱开户，之后还回去。<br>你可以加杠杆，小仓位做多。比如2倍杠杆，20%仓位的沪深300，这样相对于总资金，你购买了40%的沪深300。而指数不可能在短期下跌50%，所以你并没有真的加杠杆。而你多出来20%资金可供利用。<br>如果你做多长债，认为风险较大，那么多出来的20%资金可以用来购买无风险收益，比如短债。<br>选择贴水购买，可以进行无风险套利，不要选择升水承担溢价。不断展期，即可实现长线投资。<br>我斗胆说一句：【在货币不断贬值，流动性泛滥的年代，最大的风险就是承担的风险不够。只要精确计算了自己的承受的风险，你应该寻找一切方法给自己加杠杆。】<br>你那多出来的现金，要么拿去上课、买书、买生产力工具，要么拿去投资，要么等待加仓；留着只会贬值，不能给你提供你需要的安全。</li><li>指数ETF期权，50万门槛。最常用的做法是在牛市末期买put预防突然下跌，我推荐学习。</li><li>国债期货。同上。</li><li>标普和纳指的股指期货，没有门槛。<br>【<strong>标普可以理解为人类文明集体的增速。纳指可以理解为人类文明科技的增速。</strong>】<br>如果你主动投资，但跑输了这两个指数，那你有90%的可能不适合主动投资。</li><li>美股指数ETF期权，没有门槛。</li><li>美股的指数基金是可以购买的，QQQM是0.15%，SPY是0.1%，并不贵。但依然，没有送钱的理由。</li><li>美债、美债ETF期权、美债期货。而不是选择美债ETF。没有门槛，就占外汇额度。</li><li>黄金期货，门槛10万。美国交易商没有门槛。<br>【<strong>黄金代表人类货币流动性的增速。</strong>】<br>如果你跑赢了通胀，但没有跑赢黄金。这证明你的钱依然贬值了。</li><li>实物金条，回收没有折损，相对于沪金期货溢价不足1%。</li><li>BTC，而不是BTC ETF。没有门槛。不同交易所手续费不同，Robinhood免手续费。最大问题是人民币购买稳定币的巨大溢价。</li><li>BTCDOM指数合约，没有管理费。同上。</li><li>外汇，建议用IBKR，没有门槛。<br>叠甲：不懂就不要做，对自己的钱负责。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;经济术语分析&lt;/h1&gt;
&lt;hr&gt;
&lt;h2 id=&quot;社会金融&quot;&gt;&lt;strong&gt;社会金融&lt;/strong&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&quot;社会：&quot;&gt;社会：&lt;/h3&gt;
&lt;h4 id=&quot;通缩-通胀-滞胀：&quot;&gt;&lt;strong&gt;通缩|通胀|滞胀：&lt;/strong&gt;&lt;/h4&gt;
</summary>
      
    
    
    
    <category term="小知识" scheme="https://stars-at-dawn.github.io/categories/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="小知识" scheme="https://stars-at-dawn.github.io/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>旅游地点记录</title>
    <link href="https://stars-at-dawn.github.io/posts/62bf27e9"/>
    <id>https://stars-at-dawn.github.io/posts/62bf27e9</id>
    <published>2024-11-02T02:27:26.000Z</published>
    <updated>2024-11-02T02:27:27.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="村寨">村寨</h2><p><strong>安徽 西递村</strong>   ☆☆☆☆</p><p>建议时间：2-5月份</p><p>徽派建筑 画画圣地 有许多过来画画的学生</p><p><strong>四川甘孜 丹巴藏寨</strong> ☆☆☆</p><p>一般 景点少50一张票自己开进去 路不好开 风景挺好看的</p><p><strong>西江 千户苗寨</strong> ☆☆</p><p>民风不纯朴，宰客严重！<br>票价也不值得，没有宣传的那样好！建议不要来<br>老年人免费的可以来看，年轻人这个票价不值得<br>其它的商业化严重什么的，大家都知道了。旺季住半山民宿一晚1500</p><p><strong>湖南 皇都侗寨</strong></p><p><strong>福建 田螺坑村</strong> ☆☆☆☆</p><p>客家土楼 值得一去的</p><p><strong>福建 永定 集庆楼/承启楼</strong> ☆☆☆☆</p><p>客家土楼 值得一去的</p><p><strong>山西洪洞 大槐树</strong> ☆☆</p><p>寻根问祖（对同一个姓的人说的客套话：<strong>五百年前是一家</strong>。一说出处就是在这里）<br><strong>情怀价值无限</strong><br>但<strong>旅游游玩价值无</strong>，就是引诱外地人 来此参观现代建设的情怀建筑<br>成人门票80，儿童，60岁老人半价 军人，1.2米以下，65岁以上免费 洪洞本地身份10元，开年3 4月淡季有免费的</p><p><strong>陕西 青木川古镇</strong> ☆☆☆☆☆</p><p>休闲游的好地方，安静，环境好，适合散心，就是没有高速，山路过去有点距离<br>就是卖东西的特别多！翟家大院可以看看！魏氏宅院也行！游客服务中心旁边有个旅拍店价格合适服务很好！<br>从游客中心停车场后面可以爬个小山头，回龙寺（全程木栈道500米左右，爬升约50米）老少皆宜。车子只能停到游客中心停车场，步行二百米就进去小镇了。<br>套票网购54元，是三个地方：老宅、烟馆、荣盛魁），老宅单独参观是30元。</p><p><strong>山西 碛口古镇</strong> ☆☆☆</p><p>“九曲黄河第一镇”<br>商业化太严重到处是客栈民宿 真正的古建筑没多少 没啥看的<br>无门票停车场免费，景区免费公交接送</p><p><strong>西藏 嘎拉桃花村</strong>  ☆☆☆☆</p><p>素享“西藏江南”美誉<br>盛开时间最早，从三月中旬到四月上旬。<br>驱车沿318国道往东南方向行驶十几分钟，就来到了嘎拉村</p><p><strong>四川 曾达村</strong></p><p>特别好看的梨花</p><p><strong>山西 王家大院</strong> ☆☆☆☆</p><p>“民间故宫”、“山西紫禁城”等美誉<br>总面积就达到25万平方米，据说是中国最大的私人豪宅之一，其规模之大令人叹为观止。<br>院内房屋密集，布局有序，整体呈上坡状，气势恢宏<br>一砖一瓦，处处都是历史；一匾一联，字字皆为文化。注意避开旅游旺季，不然举步维艰</p><p><strong>浙江 诸葛八卦村</strong> ☆☆☆☆</p><p>名人加持<br>带有古风，具有江南风味的建筑</p><p><strong>浙江 南浔古镇</strong> ☆☆☆☆☆</p><p>景区不要门票。9点钟到，刚好南门有表演。个别参观要门票，看自愿。<br>停车场停7个小时，25块钱。还可以。<br>吃的东西不少，下午到晚上，人山人海。下午两点多，去买3块钱的船票，</p><p><strong>浙江南浔 小莲庄</strong> ☆☆☆☆</p><p>南浔古镇门票免费，可以坐水上巴士游览，还可以在水上游览，<br>古镇里有很多美食，定胜糕和梅花糕口味不错。还有百间楼-丝绸码头头。</p><p><strong>浙江 乌镇</strong> ☆☆☆☆</p><p>江南六大古镇<br>特色菜可以但要花很多钱。除了逛街，其他活动很费钱。<br>白天、晚上各有各的特色</p><p><strong>浙江温岭 石塘镇</strong></p><p>渔村</p><p>**浙江温州 永嘉 苍坡古村 **☆☆☆☆<br>正在装修中，古建筑数量有限，水体污染严重，且大部分设施未开放，建议免费停车后从旁门进入，但需注意安全卫生问题。<br>苍坡古镇景色非常漂亮，大晴天拍照特别好看，基本上30分钟就能逛完，如果走走拍拍照，1个小时也足够了。<br>村子以文房四宝作为型来构建村子</p><p><strong>浙江长兴 方一村</strong></p><p><strong>浙江富阳 龙门古镇</strong> ☆☆</p><p>70门票太贵了<br>没必要门票，全是小路能进，村子里也能进，一些要门票的小房间没啥看点<br>商业化没有那么严重的一个小镇，去的人不多，小镇本身得人也不多。</p><p><strong>浙江丽水市松阳县 杨家堂村</strong></p><p>**浙江武义 郭洞村景区 **☆☆</p><p>车比人多。门票30￥，还有小收费点<br>值得去一下，顺便尝竹筒饭。<strong>下去五分钟车程有个水库，那里很好</strong></p><p><strong>安徽 黄山 宏村镇</strong>☆☆☆☆</p><p>绝对超级美丽的一个地方，一半是诗情画意，一半是人间烟火，要好好保护好这个村落，不输土耳其的任何一个小镇，中国的古镇那是真正的古镇，马头墙，青砖灰瓦的特色房屋，到处都是服装写生的学生和艺术家，没事去这里住两天，发发呆，看看山景，让生活慢下来，虽然不可避免的商业化，但随处可见的原住居民的日常劳作与游客的旅途漫游是如此的和协与相得益彰。</p><p><strong>广西 黄姚古镇</strong> ☆☆☆</p><p>门票价格太贵（88￥），商业味道太浓，没有文化气息。<br>黄姚古镇依山傍水，山水相映成趣，让人心旷神怡。 风景不错</p><p><strong>福建 龙海 埭美古村</strong> ☆☆</p><p><strong>河南 陕州 地坑院</strong> ☆☆☆</p><p>“没有建筑的建筑”（地坑）<br>去了一个坑一个坑看，变成小饰品步行街了。<br>没意思。啥也没有。商业化太严重。晚上看灯有特色，不带无人机不要去了。<br>交通挺便利，历史建筑，门边不贵，周边餐饮配套很多</p><p><strong>福建龙海 埭美古村</strong></p><p><strong>湖南 勾蓝瑶寨</strong> ☆☆☆</p><p>适合养老的优美环境</p><p><strong>云南 丽江束河古镇</strong> ☆☆☆☆</p><p>除了丽江古城外，每次我都会来这里，它没有丽江大研喧嚣，商业化更少一些，慵懒是这里的代名词，小桥流水，石板小道，它却一样都不少。束河古镇一直给我一种宁静舒适，一幅我所向往生活的模样。这里不必跟随着人们的脚步去走，随心便是最好的生活模式，早上在古城里逛逛，看看繁花盛开的静谧街巷，中午的一碗米线，人间至味仅仅不过是古镇里不起眼的米线小店。阳光正好的午后随便找一家咖啡店，让书本、音乐和浓郁的咖啡香陪伴一下午，晚上去看看四方街的篝火晚会，与纳西人围着篝火载歌载舞的欢乐，伴随着繁星点点的星空，束河的夜也是醉人。<br>📍地址：云南丽江束河古镇  💰门票：0元  🕐开放时间：全天开放<br>👉🏻束河古镇游玩推荐：<br>📍哈里谷：这个片区都是一些仿古建筑，亭台楼阁，小桥流水很适合拍中式风格。<br>📍四方听音广场：晚上有篝火表演，广场一旁有一个雪山观景台，走上去可以看到雪山。<br>📍飞花触水：这里聚集了很多餐厅、酒吧。<br>📍聚宝山：可以打卡束河古镇全貌</p><p><strong>吉林图们 白龙村</strong></p><p>边境</p><p>北京市门头沟区斋堂镇 爨柏景区（<strong>爨底下村</strong>）☆☆☆</p><p>景区比较小游玩时间一小时左右，可以了解一下明清时期的山里民居，但大部分的房子都改民宿了。<br>目前雁翅镇到景区的路正在施工路况不好，驾车出游多注意安全。（2024-03-15）</p><p><strong>新疆布尔津 乔木村</strong> ☆☆☆☆</p><p>05月01日至10月15日 08:00-22:00<br>早穿棉袄午穿纱，早上只有10度以下了，羽绒服真的得安排<br>夏天晚上8点半都还没有天黑，温度不冷不热刚刚好，风景很好，远远看村子确实有种中国小瑞士的感觉</p><p><strong>广东 千年瑶寨（连南瑶寨）</strong> ☆</p><p>巴掌大一块地方全是卖东西的门票一百多就连演出也是卖字画的真的太不值了</p><p><strong>辽宁沈阳 东陵公园</strong> ☆☆☆☆<br>清福陵，东陵公园内，是清太祖努尔哈赤和皇太极生母叶赫那拉氏的陵墓，另有努尔哈赤的后妃叶赫那拉氏、乌拉那拉氏等人葬于此处。 福陵是清太祖努尔哈赤及其孝慈高皇后叶赫纳喇氏的陵墓。<br>与沈阳市的昭陵、新宾县永陵合称“关外三陵”、“盛京三陵”。<br>东陵公园始建于公元1629年(天聪三年)，到公元1651年基本建成。后经清朝顺治、康熙、乾隆年间的多次修建，形成了规模宏大、设施完备的古代帝王陵墓建筑群。距今已有三百六十余年历史。崇德元年(公元1636年)大清建国，定陵号为“福陵”，1929年被当时奉天当局辟福陵为东陵公园。</p><p><strong>辽宁沈阳 盘古台村</strong></p><hr><h2 id="公园-景区">公园 景区</h2><p><strong>浙江桐庐 瑶琳国家森林公园</strong> ☆☆☆☆</p><p>溶洞，人少，游览路线也非常舒服</p><p><strong>浙江桐庐 瑶琳仙境</strong> ☆☆☆☆</p><p>溶洞</p><p><strong>浙江桐庐 垂云通天河景区</strong> ☆</p><p>管理非常混乱 面积很小 很贵<br>玻璃栈道现场感受并不好 高度并不高 玻璃很脏 下方的景色很差<br>拍照免费，实际20元带走<br>所谓的漂流，并不是天然的河道，而是一个带水的人造滑梯。</p><p><strong>浙江桐庐 大奇山国家森林公园</strong> ☆☆☆</p><p>人多 路少 风景还可以</p><p><strong>浙江桐庐 严子陵钓台景区</strong> ☆</p><p>125元的门票(含摆渡船票)，简直就是在抢钱！完全不值。<br>而且，满是铜臭的门票经济，对于自由脱俗的严子陵，实在就是莫大的讽刺</p><p><strong>浙江桐庐 芦茨湾</strong> ☆☆☆☆</p><p>（接上一段）<strong>果断开车掉头，开车十多分钟就能到芦茨湾，顺着著名的马岭古道，逛吃到茆坪村、深奥古村、石舍村，景色好、人文佳、还免费，那才是旅游该有的感觉</strong></p><p><strong>浙江温州 江心屿</strong> ☆☆☆☆☆</p><p>南宋开国皇 帝在江心屿避过难。民族英雄文天祥也在此地逗留过一段时间。<br>浙江省温州市鹿城区江心屿，有一旅游景点，四面环水，乘游轮可达，名曰江心寺，历史悠久。<br>进入景点，但见水光山色，宝刹庄严，金碧辉煌，一派佛光普照。<br>大门立柱上有一对长联： <strong>云朝朝朝朝朝朝朝朝散， 潮长长长长长长长长消。</strong> 此联是南宋温州状元王十朋所撰，具有深厚的文化底蕴和禅意。 重字联中“朝”和“长”为多音字，跌宕起伏，灵活互动，妙趣横生，实为古今一大奇联。 据说，能读懂了的都是高人。</p><p><strong>浙江 莫干山风景区</strong> ☆☆☆☆</p><p>国内四大避暑胜地之一。<br><strong>附近有车的可以去，外地的就别去了，就是普通度假村</strong>，而且当地网约车和出租车都要加价30多才载你<br>风景不错，空气新鲜，都是山里人家和民宿，度假放松好去外！</p><p><strong>浙江 雁荡山</strong> ☆☆☆</p><p><strong>景点分散还很小。</strong><br>各景点停车虽然免费，但门票价太贵。<br>如果开车路过大龙湫的瀑布还值得一看。<br>去过黄山，华山或泰山的，这里完全可以不用来了。神农架也秒杀这里。</p><p><strong>浙江 千岛湖</strong> ☆☆☆☆</p><p>被誉为“天下第一秀水”<br>又称新安江水库，我国最大的人工湖，其水质为国家一级水体<br>千岛湖很大，水非常干净，湖面上星罗棋布着很多小岛，青山绿水，很美，<br>商业气息严重，处处消费，不尊重历史古迹，不过自然风光可以，去了的话可以<strong>步行环岛观光风景（路线在下面），不建议消费</strong></p><p><strong>崇左中越边境 德天跨国瀑布</strong> ☆☆</p><p>能做竹排 雨季瀑布挺好看<br>其它没东西看 瀑布非雨季水很小<br>115￥太贵 坐摆渡车太长</p><hr><h2 id="自然风景">自然风景</h2><p><strong>靖西 三叠岭瀑布 ☆☆☆☆</strong></p><p>野生瀑布 无门票 路边 可接近</p><p><strong>云南金平县 勐拉温泉</strong><br>G219<br>天然野温泉，一棵大榕树伸出茂密的枝叶把温泉整个盖住，温泉含有特殊矿物（有利健身），温泉边上有傣族MM伺候你烧烤、小酒，甚是享受</p><p><strong>云南 金平蝴蝶谷</strong><br>G219<br>每年3~10月是游览佳期。7月份那真是漫天蝴蝶</p><p><strong>浙江 朱家尖风景名胜区</strong> ☆☆☆☆<br>大青山100，观音圣坛，南沙70RMB，都不错<br>乌石塘40 东沙35 白山20<br>去普陀山一定要从这里经过 打卡沙雕</p><hr><h2 id="游玩路线"><strong>游玩路线</strong></h2><h3 id="自驾游路线">自驾游路线</h3><p><strong>浙东沿海之旅：</strong><br>盐官古镇—杭州湾跨海大桥—宁波—朱家尖景区—东钱湖—象山石浦—<a href="https://www.zhihu.com/search?q=%E5%89%8D%E7%AB%A5%E5%8F%A4%E9%95%87&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3473056091%7D">前童古镇</a>—温岭石塘—雁荡山—<a href="https://www.zhihu.com/search?q=%E6%A5%A0%E6%BA%AA%E6%B1%9F&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3473056091%7D">楠溪江</a></p><p><strong>千岛湖环湖游：</strong><br>千岛湖大桥—<a href="https://www.zhihu.com/search?q=%E5%A4%A9%E5%B1%BF%E5%B1%B1%E8%A7%82%E6%99%AF%E5%8F%B0&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3473056091%7D">天屿山观景台</a>—温馨岛—骑龙巷—啤酒小镇—洲际灯塔—石林火车公园—下姜村—千岛湖大峡谷—<a href="https://www.zhihu.com/search?q=%E8%8A%B9%E5%B7%9D%E5%8F%A4%E6%9D%91&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3473056091%7D">芹川古村</a>—文渊狮城—千岛湖大桥</p><p>G219：<br>云南段 <strong>河口</strong>—<strong>云南金平县 勐拉温泉</strong>—<strong>云南 金平蝴蝶谷</strong>—接着再往铜厂乡走去往元阳梯田，一路美景。</p><h3 id="其它">其它</h3><p><a href="https://space.bilibili.com/297136">@孙探长笔记</a>离开河口还走G219的话，一定要去一下金平县的勐拉温泉，天然野温泉，一棵大榕树伸出茂密的枝叶把温泉整个盖住，温泉含有特殊矿物（有利健身），温泉边上有傣族MM伺候你烧烤、小酒，甚是享受！扎营就在温泉边。另外还有金平蝴蝶谷，每年3~10月是游览佳期。7月份那真是漫天蝴蝶，现在去嗨能赶个尾巴吧（不确定）。<br>接着再往铜厂乡走去往元阳梯田，一路美景。</p><hr><h2 id="备注">备注</h2><p>无评分的 即部分非旅游景点或者比较冷门的景点 且没什么评价的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;村寨&quot;&gt;村寨&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;安徽 西递村&lt;/strong&gt;   ☆☆☆☆&lt;/p&gt;
&lt;p&gt;建议时间：2-5月份&lt;/p&gt;
&lt;p&gt;徽派建筑 画画圣地 有许多过来画画的学生&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四川甘孜 丹巴藏寨&lt;/strong&gt; ☆☆☆&lt;/p</summary>
      
    
    
    
    <category term="推荐" scheme="https://stars-at-dawn.github.io/categories/%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="推荐" scheme="https://stars-at-dawn.github.io/tags/%E6%8E%A8%E8%8D%90/"/>
    
    <category term="旅游" scheme="https://stars-at-dawn.github.io/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>语句记录</title>
    <link href="https://stars-at-dawn.github.io/posts/b213807a"/>
    <id>https://stars-at-dawn.github.io/posts/b213807a</id>
    <published>2024-11-02T02:24:43.000Z</published>
    <updated>2024-11-02T02:24:45.044Z</updated>
    
    <content type="html"><![CDATA[<h2 id="语句记录"><strong>语句记录</strong></h2><p><strong>人民万岁！</strong></p><p><strong>懦者从不启程，弱者退与途中。</strong></p><p><strong>唯有遍历星河，才知人间值得。</strong></p><p><strong>只是糟糕的一天，不是糟糕的一生</strong></p><p><strong>你是在拜佛，还是在拜自己的欲望？</strong></p><hr><h3 id="俗语：">俗语：</h3><p>赔本赚吆喝</p><p><strong>工具没有好坏之分</strong></p><p>不要想的比做的多</p><p><strong>君子不立危墙之下</strong></p><p>君子怕小人，<strong>小人怕狠人</strong></p><p><strong>永远不要去挣最后一个铜板</strong></p><p><strong>透明和政府</strong>这两个词本身就是矛盾的</p><p>在一个拿锤子的人看来，任何东西都像钉子</p><p>先去做，做的过程再去想问题的解决办法</p><p>都快打到柏林了，还以为自己形势大好呐</p><p>阿Q挨了一巴掌，他没胆量打回去，只能骂一句儿子打老子，骂完之后他的脸仿佛不这么疼了</p><hr><h3 id="长句："><strong>长句：</strong></h3><p><strong>是俗是雅, 我已经分不清了, 我只知道月亮正圆,我若不看一眼, 倒显得我不解风情了。</strong></p><p>学校要求我们把头发剪了，我剪了头发，顿时觉得一股清流，再摸摸后脑勺，不知何时生出一只辫子</p><p>圆规为什么可以画圆? 因为<strong>脚在走，心不变。</strong><br>你为什么不可以圆梦? 因为<strong>心不定，脚不动。</strong></p><p>生而为人，要么就努力到能力出众，要么就懒得乐天知命。<br>最怕你是见识打开了，可努力又跟不上；<br>骨子里清高至极，性格上又软弱无比。</p><p><strong>当你将所有努力压在一件事情上，</strong><br><strong>那做完这件事等待你的将会是无尽的空虚</strong></p><p><strong>鲁莽者要学会思考，善思者要克服的是犹豫。</strong><br><strong>目的渴求完美，举步之际则无需周全。</strong></p><p><strong>平行的两只眼睛，却不平等看人</strong><br><strong>生在左右两只耳朵，却总听一面之词；</strong><br><strong>只有一张嘴，却总能说出两面话。</strong></p><p>你的迷茫，大多都是因为<strong>想得太多、做得太少</strong>。<br>还没开始，就担心前路太崎岖、害怕难关过不去。<br>与其思虑过度，不如脚踏实地。<br><strong>舍得逼自己一把，才能知道自己究竟能走多远。</strong></p><p>“怎样算欺凌?”<br>“十人欺负一人算。一百人欺负一人也算。”<br>“那么一万个人呢?”<br>“那是<strong>正义</strong>啊。”</p><p>一群连街边小偷都不敢呵斥的人，<br>却勇于高呼灭了敌国，<br>一帮连活着的人民的痛苦，都漠不关心的人，<br>却有脸说不忘死去的同胞。<br>——王朔</p><p><strong>你说的话里，藏着你读过的书，走过的路，爱过的人，</strong><br><strong>把自己变得丰富，才是你无惧一切的底气。</strong><br><strong>人们不在乎真相,只相信自己愿意相信的真相，谁给他们提供幻觉，谁就能轻易成为他们的主人</strong></p><p>跳蚤的来吮血，虽然可恶，而一声不响地就是一口，何等直截爽快。<br>蚊子便不然了，一针叮进皮肤，自然还可以算得有点彻底的，但当未叮之前，要哼哼地发一篇<br>大议论，却使人觉得讨厌。如果所哼的是在说明人血应该给它充饥的理由，那可更其讨厌了，幸而我不懂。</p><p>我正要出门，只看一个小狗乌咽亨即的躺在路旁，约莫是断了腿我于是请了兽医来。<br>他好一番检查，又从随身的包里摸出几个针线，不等我开口，只自顾自的缝了小狗的嘴起来。<br>我于是不见哀豪声了，它大抵是被医好了</p><p>中国人躺在儒家挖的大坑里几千年爬不上来，读书根本就不是为学习知识，掌握真理或探索宇宙奥妙，<br>读的好点的，参加科举，当个官，做做人上人；读的差的，混口饭吃仅此而已！<br>**人与人之间始终学不会平等的相处。**所以，至今仍然与现代文明格格不入（徐志摩）</p><hr><h3 id="名言："><strong>名言：</strong></h3><p>在无权、无势、善良的人身上挑毛病。<br>在有权、有势、缺德的人身上找优点。——莫言</p><p>上善若水，水善利万物而不争。——《道德经》</p><p><strong>毁掉我们的不是我们所憎恨的，恰恰是我们所热爱的。——《娱乐至死》</strong></p><p><strong>为了那些想象中的离奇故事，观众奉献了太多的笑声和泪水。——《乌合之众》</strong></p><p><strong>多数人在25岁时就死了，一直到75岁才埋葬。——富兰克林</strong></p><p>优于别人，并不高贵，<strong>真正的高贵是优于过去的自己</strong>。——海明威</p><p>如果印钞票能消除贫困的话，那么印文凭也就可以消除愚蠢了。——阿根廷总统 米莱</p><p>“<strong>屏蔽力</strong>”是一个人最顶级的能力。任何消耗你的人和事，多看一眼都是你的不对。——罗素</p><p>那些不能过公共生活，或者可以自给自足不需要过公共生活，因而不参与社会的，要么是兽类，要么是<strong>上帝</strong>。 ——亚里士多德</p><p><strong>“我们走后，他们会给你们修学校和医院，会提高你们的工资，这不是因为他们良心发现，也不是因为他们变成了好人，而是因为我们来过”</strong> ——切·格瓦拉</p><p><strong>“如果动物光吃不胖，它的肚子里一定有寄生虫；如果人民勤劳却无法致富，那个社会一定有吸血鬼。”</strong><br><strong>一鲁迅《狂人日记》</strong></p><hr><h3 id="短语：">短语：</h3><p><strong>行百里者半九十</strong></p><p><strong>不以物喜，不以己悲</strong></p><p>思接千载，视通万里</p><p>小惠未遍，民弗从也</p><p><strong>门客三千</strong>，古来已久（孟尝君食客三千）</p><p><strong>由俭入奢易，由奢入俭难</strong></p><p>**知行合一。**知进退，明得失。</p><p>流水不腐，户枢不蠹，<strong>动也。</strong></p><p><strong>谋爱前，先谋生，爱人前，先爱己。</strong></p><p>君子 <strong>藏器于身，待时而动；以钝示人，以锋策己。藏锋慰忠骨，出鞘镇河山。</strong></p><hr><h2 id="其它语句记录">其它语句记录</h2><h3 id="散文"><strong>散文</strong></h3><p><strong>黑瓦白墙的江南</strong></p><p>远处夜莺正在歌唱，<strong>引人入梦，扰人思绪</strong></p><p><strong>人生就像一盒多味巧克力，人们永远都不知道下一颗是什么味道，就好像你这颗，很甜。</strong></p><p><strong>身临其境，如一篇“桃花源记”</strong><br><strong>回首向望，是一卷“富春山居”</strong></p><p><strong>在他身上以妙不可言的比例结合在一起</strong></p><p>两年，是什么概念？<br>是把等待日出前的每一场黑夜凝铸，铸成一块徽墨，待东升之时，从容写下眼中最险峻的峰峦与路尽头最静谧的山林。<br>也是把穿透云海时每一抹水汽凝聚，聚成一股涓流，待云烟腾起，悄然晕染天边最壮观的云海与青瓦下最温柔的露珠。</p><p>——来自 摄影师独自一人耗时两年拍摄，这是你梦里的「徽州」吗？评论区</p><p>“<strong>地球这样的行星，是产生不了重元素的</strong>，你身体里的铁，来自璀璨的超新星爆炸”<br>“血液里的锌，源自两次中子星对撞后喷射向宇宙的尘埃”<br>“那微量的铜，更是需要见证一颗白矮星的死亡，即使是最微不足道的钴，也源自几十亿光年外的星云”<br>“某种意义上讲，人类对星空怀有好奇，是正常的。”<br><strong>“渴望见证星河大海的极限，因为我们本就是星辰之子。”</strong><br>“我们DNA里的氮元素，我们牙齿里的钙元素，我们血液里的铁元素，还有我们吃掉的东西里的碳元素，都是曾经大爆炸时的万千星辰散落后组成的，所以我们每个人都是星辰，你我皆为星辰之子，每一个细胞都书写着整个宇宙的历史，当你凝视自己，也望见了宇宙的轮廓”<br><strong>一切生命都是星海的孩子，我们将回归星空</strong></p><p>黄金的体积每年要磨去一千四百分之一，这就是所谓“损耗”。因此全世界流通的十四亿金子每年要损耗一百万。这一百万黄金化作灰尘，飞扬飘荡，变成轻的能够吸入呼出的原子，这种吸入剂像重担一样，压在人的良心上，跟灵魂起了化学作用，<strong>使富人变得傲慢，穷人变得凶狠。</strong><br>——雨果</p><p>“它身上的每一块钢铁、每一部零件，从原料的开采到冶炼，再到浇筑，无不由凡人进行——我们会使用机械代劳。”<br>“孩子，你要知道，这些生产机器的初步构思源于科研人员的头脑、基本架构诞生于设计师的纸笔，而它们的原型机来自于工匠们并不精湛的手艺。<strong>没有神赐，没有神谕</strong>，它们<strong>开始发动的轰鸣之声足以埋葬整个神话时代</strong>。”<br>“这些源于平凡的机器能够改变一个国家乃至世界、能够打碎神明引以为傲的资本，尽管它们无法与神正面媲美。”<br>“但它们却能让我们不再需要‘神’——<strong>至少,让我们拥有选择的权力</strong>。”</p><hr><h3 id="诗句"><strong>诗句</strong></h3><p>蒹葭苍苍，白露为霜。<br><strong>所谓伊人，在水一方</strong></p><p><strong>但愿人长久，千里共婵娟</strong></p><p><strong>郎骑竹马来，绕床弄青梅。</strong><br><strong>同居长干里，两小无嫌猜。</strong></p><p>故人轻抚今人眉，为尔散去半生灾</p><p><strong>纸上得来终觉浅，绝知此事要躬行</strong></p><p>凭君莫话封候事，一将功成万骨枯。</p><p><strong>年年岁岁花相似，岁岁年年人不同。</strong></p><p><strong>回首向来萧瑟处，也无风雨也无晴。</strong></p><p><strong>曾经沧海难为水，除却巫山不是云。</strong></p><p>天街小雨润如酥，草色遥看近却无。</p><p>最是一年春好处，绝胜烟柳满皇都。</p><p><strong>若非脚踏方寸土，不觉此身在人间。</strong></p><p><strong>应是补天余此物，险峰凝雪锢飞霞。</strong></p><p>天若有情天亦老，<strong>人间正道是沧桑</strong>——毛泽东</p><p>忽如一夜春风来，千树万树梨花开（描写雪的）<br>忽如一夜北风来，千树万树雪花白（仿写 描绘梨花开）</p><p><strong>欲买桂花同载酒，终不似，少年游</strong></p><p>“白雪纷纷何所似？”<br>“撒盐空中差可拟。”<br>“未若柳絮因风起。”</p><p>明天会变成什么？<br>会变成一束鲜花，一颗流星，一个愿望<br>会变成一个誓言，一句祝福<br>明天会变成你余下生命的第一天<br>——黑塞</p><p>如梦令·常记溪亭日暮【宋】李清照</p><p>常记溪亭日暮，沉醉不知归路。<br>**兴尽晚回舟，误入藕花深处。**争渡，争渡，惊起一滩鸥鹭。</p><p>青玉案·元夕 南宋 辛弃疾</p><p>**东风夜放花千树。**更吹落，星如雨。宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。</p><p>蛾儿雪柳黄金缕。笑语盈盈暗香去。<strong>众里寻他千百度。蓦然回首，那人却在，灯火阑珊处。</strong></p><p>宋·苏轼《前赤壁赋》：<br><strong>惟江上之清风，与山间之明月，耳得之而为声，目遇之而成色，</strong><br><strong>取之无禁，用之不竭。是造物者之无尽藏也，而吾与子之所共适。</strong></p><p>《春江花月夜》 张若虚  称为&quot;孤篇压全唐&quot;<br>……<strong>江畔何人初见月？江月何年初照人？</strong><br>……<strong>白云一片去悠悠，青枫浦上不胜愁。</strong><br>……<strong>谁家今夜扁舟子？何处相思明月楼？</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;语句记录&quot;&gt;&lt;strong&gt;语句记录&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;人民万岁！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;懦者从不启程，弱者退与途中。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;唯有遍历星河，才知人间值得。&lt;/str</summary>
      
    
    
    
    <category term="记录" scheme="https://stars-at-dawn.github.io/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="书籍" scheme="https://stars-at-dawn.github.io/tags/%E4%B9%A6%E7%B1%8D/"/>
    
    <category term="记录" scheme="https://stars-at-dawn.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>各省份简称</title>
    <link href="https://stars-at-dawn.github.io/posts/8959a8f7"/>
    <id>https://stars-at-dawn.github.io/posts/8959a8f7</id>
    <published>2024-11-02T02:24:30.000Z</published>
    <updated>2024-11-02T02:25:30.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="各省份简称：">各省份简称：</h2><p>北京（京）天津（津）江苏（苏）浙江（浙）<br>黑龙江（黑）吉林（吉）辽宁（辽）<br>内蒙古（蒙）青海（青）宁夏（宁）西藏（藏）新疆（新）<br>台湾（台）香港（港）澳门（澳）  （<strong>都是省份名的其中一个字作为其省份简称</strong>）</p><p>上海（沪）江西（赣）四川（川、蜀）<strong>（常见的非上述省的省份简称）</strong></p><p><strong>河北（冀）</strong> <strong>河南（豫）</strong> 山东（鲁）<strong>山西（晋）</strong><br>湖北（鄂）<strong>湖南（湘）</strong><br>**重庆（渝）**贵州（黔、贵）云南（<strong>滇</strong>、云）<br>甘肃（陇、<strong>甘</strong>）陕西（陕）<br><strong>安徽（皖）</strong> <strong>福建（闽）</strong> 广东（粤）广西（桂）<strong>海南（琼）</strong> <strong>（不常见的非上述省的省份简称）</strong></p><h3 id="看看你呢写出下列的省份名称吗？">看看你呢写出下列的省份名称吗？</h3><p>北京（   ）<br>天津（   ）<br>江苏（   ）<br>浙江（   ）<br>黑龙江（   ）<br>吉林（   ）<br>辽宁（   ）<br>内蒙古（   ）<br>青海（   ）<br>宁夏（   ）<br>西藏（   ）<br>新疆（   ）<br>台湾（   ）<br>香港（   ）<br>澳门（   ）</p><hr><p><strong>（陇）（冀）（渝）（黔）（沪）</strong><br><strong>（鄂）（蜀）（滇）（豫）（陕）</strong><br><strong>（粤）（桂）（琼）（湘）（鲁）</strong><br><strong>（皖）（闽）（赣）（晋）</strong></p><p>上海（   ）<br>江西（   ）<br>四川（   ）<br>河北（   ）<br>河南（   ）<br>山东（   ）<br>山西（   ）<br>湖北（   ）<br>湖南（   ）<br>重庆（   ）<br>贵州（   ）<br>云南（   ）<br>甘肃（   ）<br>陕西（   ）<br>安徽（   ）<br>福建（   ）<br>广东（   ）<br>广西（   ）<br>海南（   ）</p><hr><h2 id="常见其它地理名称：">常见其它地理名称：</h2><p><strong>岭南</strong>：<br>又称**“岭表”“岭外”**，是中国南方五岭以南地区的统称，即广东、广西、香港、澳门以及海南全境</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;各省份简称：&quot;&gt;各省份简称：&lt;/h2&gt;
&lt;p&gt;北京（京）天津（津）江苏（苏）浙江（浙）&lt;br&gt;
黑龙江（黑）吉林（吉）辽宁（辽）&lt;br&gt;
内蒙古（蒙）青海（青）宁夏（宁）西藏（藏）新疆（新）&lt;br&gt;
台湾（台）香港（港）澳门（澳）  （&lt;strong&gt;都是省份名的</summary>
      
    
    
    
    <category term="小知识" scheme="https://stars-at-dawn.github.io/categories/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="小知识" scheme="https://stars-at-dawn.github.io/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>书籍阅读记录</title>
    <link href="https://stars-at-dawn.github.io/posts/71"/>
    <id>https://stars-at-dawn.github.io/posts/71</id>
    <published>2024-11-01T12:24:26.000Z</published>
    <updated>2024-11-02T02:15:37.025Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2024年"><strong>2024年</strong></h2><h3 id="11月《股市真规则》">11月《股市真规则》</h3><h3 id="11月《上海交通大学求生手册》">11月《上海交通大学求生手册》</h3><h3 id="10月《宏观经济学原理》">10月《宏观经济学原理》</h3><h3 id="10月《小狗钱钱》">10月《小狗钱钱》</h3><h3 id="9月《穷爸爸富爸爸》">9月《穷爸爸富爸爸》</h3><h3 id="8月《被讨厌的勇气》">8月《被讨厌的勇气》</h3><p>**弗洛伊德（因果论 最终会向决定论发展）| 阿德勒（目的论）**的心理学说</p><p>​<strong>个人：</strong></p><p>不要评价他人<br><strong>人人都是我的伙伴</strong><br><strong>能够改变自己的只有自己</strong><br><strong>自大</strong>是自卑的<strong>另一种表现</strong><br>你并不是为了满足别人的期待而活着的<br>健全的自卑感不是来自与他人比较，而是<strong>来自与“理想的自己”的比较</strong><br><strong>毫不在意别人的评价、不害怕被别人讨厌、不追求被他人认可，如果不付出以上这些代价，那就无法贯彻自己的生活方式，也就是不能获得自由。</strong></p><p>​<strong>看法：</strong></p><p>我们要想<strong>体会到孤独</strong>那也需要<strong>有他人的存在</strong><br>表扬<strong>这种行为含有</strong>“有能力者对没能力者所做的评价”<br><strong>以自己的不幸作为武器来支配对方</strong>；在我们这个社会弱势有特权</p><p>​<strong>阿德勒心理学：</strong></p><p><strong>一切烦恼皆来自与人际关系</strong><br>基本上，一切人际关系矛盾都起因于对<strong>别人的课题</strong>妄加干涉。<br>阿德勒说过：<strong>“要想消除烦恼，只有一个人在宇宙中生存。”</strong><br>阿德勒说过：“<strong>没有学会直面困难的孩子会想要逃避一切困难。”</strong><br>别人如何评价你的选择，那是<strong>别人的课题</strong>，<strong>你根本无法左右。</strong><br>心理创伤并不存在！<strong>决定我们自身的不是过去的经历，而是我们自己赋予经历的意义。</strong><br><strong>阿德勒心理学</strong>反对<strong>一切</strong>“纵向关系”<strong>（上下关系），<strong>提倡</strong>把所有的人际关系都看作</strong>“横向关系”<strong>（平等关系）。</strong><br>只要没有迷失**“他者贡献”**这颗引导之星，那么你就不会迷失，而且做什么都可以。即使被讨厌自己的人讨厌着也可以自由地生活。</p><p>个人觉得和《催眠师手记》挺像的，读起来感觉也挺像的，<strong>通过另一个角度来思考确实很不一样</strong>，将<strong>因果论改为了目的论</strong>确实很有心理学的感觉，但还是纸上谈兵，真正还是要有强大的内心，像书中所说的，还要我们每个人都开始行动才行，这样世界才会变得美好。</p><h3 id="8月《说话的艺术》">8月《说话的艺术》</h3><p>：美国知名人际交往领域专家罗莎莉·马吉欧创作</p><p>​        价值不大的一本书，没有多少有价值的东西；看起来许多内容都是重复，就像是凑字数的儿童读物，价值不大。聊天的诀窍其实就只有“<strong>换位思考，察言观色</strong>”这几个字吧，<strong>平时多注意收集话题和多关注关注对方</strong>，这样才能有话可聊，同时向察言观色这些技巧也是难以言传，只可意会，所以还是要保持好的态度不管是对谁，<strong>真心随和</strong>才是最重要的!</p><h3 id="7月《社会性动物》">7月《社会性动物》</h3><p>：美国社会心理学家<a href="https://baike.baidu.com/item/%E8%89%BE%E7%95%A5%E7%89%B9%C2%B7%E9%98%BF%E4%BC%A6%E6%A3%AE/0?fromModule=lemma_inlink">艾略特·阿伦森</a> 创作的社会心理学著作 出版于1972年。</p><p>被称为“美国社会心理学的《圣经》”</p><p>“那些自身具有<strong>安全感</strong>的人，“需求”并不强烈，也就是说，他们不大可能去接受某个不期而遇的人主动示好。”<br>“社会性动物 从本质上讲<strong>人</strong>是一种<strong>社会性动物</strong>；那些生来离群索居的个体，要么不值得我们关注，要么不是人类。<strong>社会从本质上看是先于个体而存在的</strong>。那些不能过公共生活，或者可以自给自足不需要过公共生活，因而不参与社会的，要么是兽类，要么是<strong>上帝</strong>。 ”（<strong>亚里士多德</strong> 《政治学》，公元前328年）</p><p>​        作者采用大量的实验案例力求严谨，用科学的方法揭示人们的行为和心理的背后成因，涉及情感、<a href="https://baike.baidu.com/item/%E7%A7%BB%E6%83%85/2047916?fromModule=lemma_inlink">移情</a>、偏见、攻击性、<strong>从众性</strong>和利他行为等诸多方面，因此对于人们日常生活中的困惑，本书提供了科学的答案。<strong>人们总是高估自己的独特，却又永远逃不出自己的人性。</strong><a href="%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91">^2</a></p><h3 id="7月《金字塔原理》">7月《金字塔原理》</h3><p>：美国<a href="https://baike.baidu.com/item/%E8%8A%AD%E8%8A%AD%E6%8B%89%C2%B7%E6%98%8E%E6%89%98/12742636?fromModule=lemma_inlink">芭芭拉·明托</a>创作</p><p>“在组织思想时，<strong>归纳</strong>和<strong>演绎</strong>是仅有的两种可能的逻辑关系。 ”<br>“人类还有一个共同的特点，即只有用某种方式将思想表达出来——<strong>说出来或者写下来</strong>，我们才能够准确地把握自己的思想。”</p><p>​        <strong>概括</strong> <strong>总结</strong> 始终贯穿着写作，不管是作文抑或是报告都始终离不开这两个词，就像书中所说，写作就像金字塔，由下到上，概括性越来越强；由上到下，行文流畅，阅读顺滑，前文概括好内容就不会正文出现脱离主题的迷茫。</p><h3 id="6月《杀死一只知更鸟》">6月《杀死一只知更鸟》</h3><p>：美国女作家<a href="https://baike.baidu.com/item/%E5%93%88%E7%8F%80%C2%B7%E6%9D%8E/5428757?fromModule=lemma_inlink">哈珀·李 </a> 创作的长篇小说 发表于1960年。</p><p><strong>“你永远不可能真正了解一个人，除非你从他的角度去看问题。”</strong><br>“就是有那么一些人，他们——他们太担心来世了，以至于都没学会怎样在这个世界上生活。”<br>“当然了。斯库特，不要叫‘黑鬼’，那是个蔑称。” “在学校里，所有人都这么叫。” “从现在起，从所有人里减掉一个好啦……”<br>“我想让你见识一下什么是真正的勇敢，而不要错误地认为一个人手握枪支就是勇敢。勇敢是：当你还未开始就已知道自己会输，可你依然要去做，而且无论如何都要把它坚持到底。你很少能赢，但有时也会。”</p><p>​        题目“杀死一只知更鸟”，对杀死知更鸟的故事作者只用了一点笔墨，就是阿蒂克斯给孩子讲述了自己因童年射杀了一只知更鸟，从而使他总有一种负罪感的故事。从内容上看，知更鸟似乎与主题没有直接关系，但其象征意义，<strong>知更鸟</strong>贯穿了整部作品，细读作品，不难感受到<strong>知更鸟</strong>象征着天真无辜和<strong>善良的人</strong>，当你杀死它的时候，就好像在杀死善良无辜的人。知更鸟什么都没做，只不过是一种最早报晓的鸟儿，又是最后唱小夜曲的鸟儿。它鸣声婉转，曲调多变，它既不毁坏别人的花园，也不在玉米地里做窝，除了专心歌唱，什么都不做。而人们却对其无端的残害。小说中的许多人物都和知更鸟的命运一样，并没有做过任何坏事却被人伤害。不难理解作者在告诉我们发生在美国南方梅冈镇的这个故事就是一个罪恶地毁灭像知更鸟一样的天真善良的无辜者的故事。[^4]<br>​        《杀死一只知更鸟》的可贵之处在于，它塑造了人类<strong>家庭教育</strong>的典范，并提供了极具可操作性的实例与示范：如何去鉴别<strong>孩子的问题</strong>，那些是年龄造成的，应该给他们时间去成长，哪些问题又是成长中的关键，是原则问题，必须及时干预；<strong>父母</strong>应该是什么样一个形象，在复杂的社会中，哪些方面应该去适应去顺应，哪些方面应该坚持自己的立场，哪怕要为此付出代价。它着力<strong>教导孩子</strong>如何在<strong>磨难中历练风度</strong>，在<strong>不公平中积累正气</strong>，如何在充满丑陋与问题的世界中<strong>塑造自己的道德底线</strong>，保持精神的体面。<a href="%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91">^2</a></p><h3 id="5月《人生的智慧》">5月《人生的智慧》</h3><p>：德国著名哲学家<a href="https://baike.baidu.com/item/%E5%8F%94%E6%9C%AC%E5%8D%8E/224844?fromModule=lemma_inlink">叔本华</a> ，<a href="https://baike.baidu.com/item/%E5%94%AF%E6%84%8F%E5%BF%97%E4%B8%BB%E4%B9%89/1433578?fromModule=lemma_inlink">唯意志主义</a>和现代<a href="https://baike.baidu.com/item/%E6%82%B2%E8%A7%82%E4%B8%BB%E4%B9%89/10353733?fromModule=lemma_inlink">悲观主义</a>创始人。 写于1850年的晚期著作</p><p><strong>“理性的人寻求的不是快乐，而只是没有痛苦。”</strong>（亚里士多德 《伦理学》）<br>“把部分的孤独带进社会人群中去，学会在人群中保持一定程度上的孤独。……对于别人的看法，他应锻炼出一副淡漠、无动于衷的态度，因为这是培养值得称道的宽容的一个最切实可行的手段。”<br>“<strong>闲暇是人生的精华</strong>，除此之外，人的整个一生就只是辛苦和劳作而已。……凡夫俗子只关心如何打发时间，而略具才华的人却考虑如何利用时间。头脑思想狭隘的人容易受到无聊的侵袭，其原因就是他们的智力纯粹服务于他们的意欲，是意欲的工具。”</p><p>​        这本书讨论的事情与我们的世俗生活至为接近，诸如<strong>健康、财富、名声、荣誉、养生</strong>和<strong>待人接物</strong>所应遵守的原则等。正如叔本华所说的，在这本书里他尽量以世俗、实用的角度考虑问题。<strong>人生的智慧就是如何尽量幸福、愉快地度过一生这样的一门艺术。</strong>[^4]</p><h3 id="5月《工作、消费主义和新穷人》">5月《工作、消费主义和新穷人》</h3><p>：英国社会学家<a href="https://baike.baidu.com/item/%E9%BD%90%E6%A0%BC%E8%92%99%E7%89%B9%C2%B7%E9%B2%8D%E6%9B%BC/7117017?fromModule=lemma_inlink">齐格蒙特·鲍曼</a> 创作 。被誉为“当今用英文写作的最伟大社会学家”“后现代性预言家”。</p><p>“消费市场通过诱惑性的<strong>消费文化</strong>而非强制性的国家权力来实现社会整合。”<br>“当代的教育理念和体制都强调<strong>对人的驯化</strong>，并宣称，劳动力市场的不景气只是由于个人没有掌握先进的技能和文化知识，而不是<strong>结构性的经济因素和制度安排的矛盾</strong>所造成的。”<br>“雇用临时工制度深刻影响了饱受这一制度之苦的人们：未来变得非常不确定，它阻止了所有理性的预测，尤其是人们对未来的基本信念和希望，而这正是人们团结一致反抗最不能容忍的现状所必须的。”</p><p>​        在生产者和普遍就业的社会中，贫穷是一回事。在消费者社会中，贫穷是另一回事。在后者社会中，<strong>生活项目围绕消费者的选择而建立</strong>，而不是围绕工作、专业技能而建立。“贫穷”曾经与失业联系在一起，如今，它主要指向有缺陷消费者的困境。这种差异改变了贫穷的体验方式，对于拯救苦难产生重大影响。<a href="%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91">^2</a><br>​        人为什么必须要工作？穷人阶层是如何被制造出来的？现代社会的内在逻辑有没有不堪一击的链条？如果有，那么如何在个体身上对抗它？鲍曼讲得明白极了：<strong>工作之体面、道德、崇高化</strong>，是一场事关控制和服从的权力斗争的结果，它和社会规训、父权制、经济收益牢牢捆绑在一起。从<strong>生产社会到消费社会的转变</strong>，让经济水平成了评判人价值和尊严的标准，让具有使命感的工作成为少数<strong>精英阶层的特权</strong>，再将穷人说成是懒惰、无能、危险的他者，贫穷是他们咎由自取，将结构性困境个体化，以此<strong>逃避道德的责难</strong>。最终更加庞大的底层被制造出来，作为过剩的“人类废弃物”被抛弃、驱逐、分类处理。<strong>西方世界的危机在于不再质疑自己</strong>。[^4]</p><h3 id="4月《狂人日记》-鲁迅短篇小说集">4月《狂人日记》(鲁迅短篇小说集)</h3><p>：鲁迅 原名周树人，字豫才 浙江绍兴人。</p><p><strong>“从来如此，便对么？”</strong>(《狂人日记》)</p><p><strong>我翻开历史一查，这历史没有年代，歪歪斜斜的每页上都写着“仁义道德”几个字。我横竖睡不着，仔细看了半夜，才从字缝里看出字来，满本都写着两个字是“吃人”！</strong>(《狂人日记》)</p><h3 id="4月《java并发编程的艺术》">4月《java并发编程的艺术》</h3><h3 id="4月《一个人的朝圣》">4月《一个人的朝圣》</h3><p>：英国作家<a href="https://baike.baidu.com/item/%E8%95%BE%E7%A7%8B%C2%B7%E4%B9%94%E4%BC%8A%E6%96%AF/0?fromModule=lemma_inlink">蕾秋·乔伊斯</a> 创作的长篇小说  出版于2012年。</p><p><strong>”给予和接受都是一份馈赠，既需要谦逊，也需要勇气。“</strong><br>“如果我们都不趁着现在偶尔疯狂一下，日子就没什么盼头了。”</p><p>​        如果没有今年一年的行走，我想我不会有这么深的感触，其实在外行走不是为了看多少风景遇见多少人，而是通过满载的回忆沉淀过目跳脱原来那个世界，跳脱已经习惯的生活模式去<strong>感悟真正的自己</strong>，找到真正想要的生活方式与状态。感谢这本书，让我有无以言说的共鸣。[^4]个人觉得与《牧羊少年奇幻之旅》有异曲同工之妙，不管目标是什么，前进的路上总是需要他人的帮助与陪同。</p><h3 id="4月-《乌合之众》">4月**《<strong>乌合之众</strong>》**</h3><p>：法国 社会心理学家 <a href="https://baike.baidu.com/item/%E5%8F%A4%E6%96%AF%E5%A1%94%E5%A4%AB%C2%B7%E5%8B%92%E5%BA%9E/6486008?fromModule=lemma_inlink">古斯塔夫·勒庞</a> 创作的<a href="https://baike.baidu.com/item/%E7%A4%BE%E4%BC%9A%E5%BF%83%E7%90%86%E5%AD%A6/80310?fromModule=lemma_inlink">社会心理学</a>著作 出版于1895年。</p><p><strong>“群体喜欢的英雄，永远像个恺撒。”</strong><br>“<strong>为了那些想象中的离奇故事，观众奉献了太多的笑声和泪水。</strong>”<br>“在集体心理中，个人的才智被削弱了，从而他们的个性也被削弱了。异质性被同质性所吞没，无意识的品质占了上风。”</p><p>​        本书揭示了当人们聚集在一起，成为一个群体时的行为以及个人的人性为什么会发生变化，此时人们好像会<strong>失去</strong>自己的个性，取而代之的是被群体的氛围所裹挟的主义；具备足够强大的能力来抵挡情感暗示的人寥寥无几，造成这种现象的社会心理的特点可以总结为三点原因：心理<strong>趋同</strong>、情绪感染、心理暗示。因此在群体中易于在趋同的洪流中<strong>迷失自我</strong>。<br>​        而在乔治·<strong>奥威尔</strong>的《1984》与《动物农场》里更将领袖的动员手段描写的细致入微，从语言上讲主要有断言法、重复法、传染法。再看现代传销与邪教的发展便是歪曲的利用了这几种动员手段，鼓动群体无意识行为，给人们的身心健康造成极大破坏，也扰乱了正常的社会秩序。<a href="%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91">^2</a></p><h3 id="4月《娱乐至死》">4月《娱乐至死》</h3><p>：美国 媒体文化研究者、批判家 <a href="https://baike.baidu.com/item/%E5%B0%BC%E5%B0%94%C2%B7%E6%B3%A2%E5%85%B9%E6%9B%BC/0?fromModule=lemma_inlink">尼尔·波兹曼</a>     出版于1985年</p><p>“<strong>毁掉我们的不是我们所憎恨的，恰恰是我们所热爱的。</strong>”<br>“有两种方法可以让文化精神枯萎，一种是<strong>奥威尔式</strong>的——文化成为一个监狱，另一种是<strong>赫胥黎式</strong>的——文化成为一场滑稽戏。”</p><p>​       在《娱乐至死》在书名中，作者提出了<strong>娱乐至死</strong>的深刻预见。“一切公众话语日渐以娱乐的方式出现，并成为一种文化精神，我们的宗教、政治、新闻、体育、教育和商业都是心甘情愿成为<strong>娱乐的附庸</strong>，毫无怨言，甚至无声无息，其结果是我们成为一个娱乐至死的物种。”那个时代电视才兴起，网络还未出现，他即看到电视对人的生存方式、生存状态的一种准备概括，即一种娱乐至死的状态。现在是手机等新媒体的时代，人们的依赖和沉迷远胜于前，以至形成了人本身的一种生存状态和生存方式。[^3]</p><h3 id="3月《极简主义》">3月《极简主义》</h3><p><strong>“我们不是自己的财物本身。 我们的价值并不局限于自己所拥有的财产。”</strong><br>“人生中的根本性转变，只有在人们<strong>将“应该做”的事情变为“必须做”<strong>时才会发生。”<br>“<strong>你唯一能改变的人是你自己。<strong>当你以身作则时，与你走得最近的人往往也会跟着效仿。”<br>“生活中主要有四道枷锁，让我们无法寻找热情，它们分别是</strong>身份、地位、确定性和金钱</strong>。”<br>“通往财务自由的第一步就是</strong>建立书面的每月预算</strong>。注意，这里有三个关键词：<strong>书面、每月以及预算</strong>。”<br><strong>“幸福源于有意义的人生。幸福的人生充满热情和自由，可以实现个人成长，为他人做出贡献。成长和奉献才是幸福的基石，而非身外之物。”</strong><br>“<strong>不要把时间耗费在没完没了的计划未来上</strong>。或是没完没了的担忧烦恼中。抑或是没完没了的其他任何事里。而要享受当下。<strong>留意你的那些努力成就了什么</strong>。毕竟，它们使你行至山顶。在山上，就在那儿。”</p><p>​       极简主义是一种<strong>消除生活过剩、关注本质、寻找幸福、满足和自由的工具</strong><br>​       简单成功方程：<strong>成功=快乐+持续进步</strong></p><h3 id="3月《局外人》">3月《局外人》</h3><h3 id="3月《动物庄园》-奥威尔短篇小说集">3月《动物庄园》(奥威尔短篇小说集)</h3><p>：<a href="https://zh.wikipedia.org/wiki/%E8%8B%B1%E5%9C%8B">英国</a>作家<a href="https://zh.wikipedia.org/wiki/%E5%96%AC%E6%B2%BB%C2%B7%E6%AD%90%E5%A8%81%E7%88%BE">乔治·奥威尔 </a>   短篇小说集  1945年《动物农场》出版</p><p>“<a href="https://zh.wikipedia.org/wiki/%E5%81%87%E5%85%A9%E9%9B%A3%E6%8E%A8%E7%90%86">四条腿好，两条腿坏</a>”<strong>假两难（推理、论证）</strong>(英语：又称<strong>非黑即白</strong>（black-or-white)</p><p>​        动物庄园作为其中最有名的小说，原标题为《动物庄园：一个童话故事》 （<em>Animal Farm: A Fairy Story</em>）<br>极具讽刺的指出了历史上的革命之后，英雄死去或是陷害人民却拥护一位暴君上台，他们却不知问题所在，以为革命成功，其实只不过<strong>另一个轮回</strong>罢了，历史的影像重新倒带而已，整篇文章映射苏联的整个历程，从共产主义学说创立到十月革命，从苏联建立到美苏冷战都包含其中。</p><h3 id="3月《1984》"><strong>3月《1984》</strong></h3><p>： <a href="https://zh.wikipedia.org/wiki/%E8%8B%B1%E5%9C%8B">英国</a>作家<a href="https://zh.wikipedia.org/wiki/%E5%96%AC%E6%B2%BB%C2%B7%E6%AD%90%E5%A8%81%E7%88%BE">乔治·奥威尔 </a>    反乌托邦小说  出版于1949年</p><p>“<strong>老大哥在看着你</strong>”  同时无处不在的“<strong>电幕</strong>”在私密和公开场合监视着公众。</p><p>​        该作揭示了社会在政府的完全操控下的是什么样的，不仅仅是政府的可怕 还有人们的愚昧无知以及丧失了对真的感悟和对假的批判，值得我们深深思考现今的政府以及社会的舆论是否还是真实亦或者是有失偏颇，阻碍和平的是什么？是<strong>民族主义</strong>还是<strong>政府洗脑</strong>？</p><h2 id="2023及以前："><strong>2023及以前：</strong></h2><h3 id="高中《老人与海》">高中《老人与海》</h3><p>： 美国作家<a href="https://baike.baidu.com/item/%E6%B5%B7%E6%98%8E%E5%A8%81/285543?fromModule=lemma_inlink">海明威</a> 于1951年在<a href="https://baike.baidu.com/item/%E5%8F%A4%E5%B7%B4/290824?fromModule=lemma_inlink">古巴</a>写的一篇<a href="https://baike.baidu.com/item/%E4%B8%AD%E7%AF%87%E5%B0%8F%E8%AF%B4/6573555?fromModule=lemma_inlink">中篇小说</a>，于1952年出版。</p><p>“不过，人可不是为失败而生，他说，<strong>人可以被毁灭，但不能被打败</strong>。”<br>“也不知道为什么，上了年纪的人都醒的很早，大概是想多拥有一点时间吧。”</p><p>​        该作围绕一位老年古巴渔夫，与一条巨大的<a href="https://baike.baidu.com/item/%E9%A9%AC%E6%9E%97%E9%B1%BC/10407850?fromModule=lemma_inlink">马林鱼</a>在离岸很远的湾流中搏斗而展开故事的讲述。尽管海明威笔下的老人是悲剧性的，但他身上却有着尼采“超人”的品质，<strong>泰然自若地接受失败，沉着勇敢地面对死亡</strong>，这些“硬汉子”体现了海明威的人生哲学和道德理想，即<strong>人类不向命运低头，永不服输的斗士精神</strong>和<strong>积极向上的乐观人生态度</strong>。[^5]</p><h3 id="高中《野性的呼唤》">高中《野性的呼唤》</h3><p>： 美国作家<a href="https://baike.baidu.com/item/%E6%9D%B0%E5%85%8B%C2%B7%E4%BC%A6%E6%95%A6/1277793?fromModule=lemma_inlink">杰克·伦敦</a> 创作的中篇小说。</p><p><strong>“道德本性是一种虚荣，在残酷的生存竞争中是一种障碍”</strong>（译者序）<br>“他认为自己有权得到这个地位。那是他自己挣来的，要是得不到，他绝不肯善罢甘休。 他身上有一种相当特别的弹性或弹力，像猫似的，特别警觉，生活在看得见和看不见的永久危险中的人，才会有这种警觉。”</p><p>​        在现实主义这一点上，《野性的呼唤》具有更深刻的揭示作用。生存环境的变迁，使巴克从一个文明社会的宠物变成了一个荒野深处的狼群之王，这是巴克的本性使然；同时这也是美国社会现实生活的真实写照。<strong>人与人之间尔虞我诈，弱肉强食，适者才能生存，<strong>竞争无处不在。这就是美国社会的现实。杰克·伦敦在这方面，对这一社会现实进行了无情的鞭挞。由于</strong>他对人类文明的失望与冷漠</strong>。在小说中他毫不宽恕他笔下亦即巴克眼中的红衣人、哈尔等两条腿的“人们”道德原则的丢失和“人性”的沦丧。对<strong>资产阶级的虚伪道德</strong>进行了无情地<strong>揭露和批判</strong>。把狗眼中的世界、人类的本质特别是美国社会的现实本质刻画得淋漓尽致。[^6]</p><h3 id="高中《契诃夫小说精选》">高中《契诃夫小说精选》</h3><p>：安东·巴甫洛维奇·契诃夫   俄国作家，剧作家</p><p><strong>“蚜虫吃青草，锈吃铁，虚伪吃灵魂。”</strong><br>“幸福的人之所以会自我感觉良好，显然只是因为那些不幸的人沉默地背着他们的重负。”</p><p>​        加缪说，“<strong>想认识一座城市，要看那里的人如何相爱和死亡</strong>。”契诃夫几乎都在讲述生活在俄罗斯这片寒冷大地上的人们，是如何相爱和死亡的。契诃夫的伟大在于他关照卑贱的、高贵的、狭隘的、愚蠢的<strong>每一个灵魂</strong>，<strong>又像上帝一样不近人情</strong>。</p><h3 id="高中《三体-三部曲》">高中《三体  三部曲》</h3><p>： 是<a href="https://baike.baidu.com/item/%E5%88%98%E6%85%88%E6%AC%A3/142084?fromModule=lemma_inlink">刘慈欣</a> 创作的长篇科幻小说系列</p><p>“**猜疑链”**和“技术爆炸”<br>“毁灭你，与你有何相干？”<br><strong>“给岁月以文明，而不是给文明以岁月。”</strong><br><strong>“给时光以生命，而不是给生命以时光。”</strong><br>“<strong>我们都是阴沟里的虫子，但总还是得有人仰望星空。”</strong></p><p>​        星空如此浩瀚，人们却只能为蜗居浪费一生。与浩瀚的宇宙相比我们就像一只软弱无力的虫豸，可我们却互相背叛，那人类文明又该何去何从呢？</p><h3 id="高中《福尔摩斯-上中下》">高中《福尔摩斯  上中下》</h3><p>： <a href="https://baike.baidu.com/item/%E6%9F%AF%E5%8D%97%C2%B7%E9%81%93%E5%B0%94/978103?fromModule=lemma_inlink">柯南·道尔</a> 所著的侦探小说</p><p><strong>“勇敢是愚蠢最好听的代言词”</strong><br>“<strong>笑骂由你，我自为之</strong>；家藏万贯，唯我独赏”<br>“在我得到这些事实之前就加以推测，那是最大的错误。”<br>“一个蠢货，往往会得到一个比他更蠢的家伙的仰慕和赞美。”<br>“Where there is no imagination, there is no horror. ”<strong>（没有想象，就没有恐惧。）</strong><br><strong>“除去所有不可能的因素，不管剩下的是什么——无论是多么难以置信的——那就是真相。”</strong><br>“看，它是何等地光彩夺目呀！当然，它又是罪恶的渊薮。<strong>每颗珍贵的宝石无不如此。它们是魔鬼最得意的诱饵。</strong>”<br>“他对她轻声说的不过是他曾经对上百个女人说过的同一些誓言，可她却沾沾自喜，以为就她一个人真正打动了他的心。”<br>“亲爱的雷斯垂德，我认为，**当法律无法给当事人带来正义时，私人报复从这一刻开始就是正当甚至高尚的。**所以说，这次我决定不受理这个案件。”</p><h3 id="高中《催眠师手记-第一季》">高中《催眠师手记 第一季》</h3><p>： 是<a href="https://baike.baidu.com/item/%E9%AB%98%E9%93%AD/3797864?fromModule=lemma_inlink">高铭</a> 创作的心理推理纪实档案（推理小说）</p><p><strong>“观察这个世界用一只眼睛就够了，另一只则用来多看看自己。”</strong><br>“你喜欢钱？ 非常喜欢。 为什么？ 它能让你体会到舒适，远离很多不爽的东西。<strong>钱不脏，脏的是人。”</strong></p><h3 id="高中《催眠师手记-第二季》">高中《催眠师手记 第二季》</h3><p><strong>“能够独处的，不是神明就是野兽。”</strong><br>“他们剪掉我的翅膀，却又要我飞翔！”<br>“鬼和爱情：大多数人都信，但谁都没见过。”<br>“那些看上去对每个人都好的人，其实最无情。”<br><strong>“打破幻想的那个人，最容易成为幻想的替代品。”</strong><br>“人这辈子都在证明自己，几乎没有一刻是停下来的。”<br><strong>“独处的时候是离上帝最近的时候。”</strong> ——英国谚语</p><p>​        <strong>心理咨询师能够做的，只是疏导，而不是治愈。最终，要驱除心魔，还得靠自己。</strong></p><h3 id="高中《天才在左疯子在右》">高中《天才在左疯子在右》</h3><p>： 是<a href="https://baike.baidu.com/item/%E9%AB%98%E9%93%AD/3797864?fromModule=lemma_inlink">高铭</a> 创作的访谈录（本质还是一本小说），首版时间为2010年2月。</p><p><strong>“真理属于人类，谬误属于时代”</strong><br>“时间不是流逝的，流逝的是我们”<br>“想看到真正的世界，就要用天的眼睛去看天，用云的眼睛去看云，用风的眼睛去看风”<br>“<strong>经历、知识都是客观</strong>，客观影响了你，组成了你的思想，所以最终又成了你的主观 **当你知道得越来越多，你就和别人越来越不一样。**实际上，每个人都是越来越和别人不一样的。 后来我想到这个就开始好奇，别人眼中的世界，是什么样子的呢？”<br>“其实，我想通了很多很多。<strong>生和死，不重要，重要的是去尊重生命</strong>；生命是否高贵不重要，重要的是尊重自己的存在；在自己还有生命的时候，在自己好存在的时候，带着自己那颗人类的心，永不停息地追寻那个答案。<strong>有没有答案，不重要，重要的是要充满期待</strong>。”</p><h3 id="初中《水浒传》">初中《水浒传》</h3><p>：</p><h3 id="初中《西游记》">初中《西游记》</h3><p>：</p><h3 id="初中《牧羊少年奇幻之旅》">初中《牧羊少年奇幻之旅》</h3><p>：巴西作家保罗·科埃略 创作的长篇小说  出版于1988年。</p><p><strong>”马克图布“</strong>（意为命中注定）<br><strong>”只有一样东西令梦想无法成真，那就是担心失败。“</strong><br>”万物皆为一物。当你想要某种东西时，整个宇宙会合力助你实现愿望。“<br>”幸福的秘密就在于，既要看到世上的奇珍异宝，又要永远不忘记勺里的那两滴油。“<br>”我已经开始做十年前就可以开始做的事情了。但是我很高兴，因为毕竟没登上二十年才做这件事。“</p><p>​        《牧羊少年奇幻之旅》是一部象征性作品，旨在启示人们实现梦想要经历一个艰难的过程，需要<strong>勇气、智慧、执着和经受考验</strong>。小说通过圣地亚哥在寻梦旅途中学到的许多教导，展示了精神追求与现实冲突的一种融合。<a href="%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91">^2</a><br>​        <strong>《小王子》教你放下执念，而《牧羊少年奇幻之旅》是教你寻找执念</strong>；两种不同的方法，确有着相同的目的。重点不是你在这个世界上寻找什么，而是在过程中明白什么是不可丢弃的，那将是你生命的意义所在，超越一切，一旦了白于心，就将于永恒同在。<strong>追随天命，倾听心灵</strong>，关注预兆，学会语言！<strong>你的心在哪里，你的宝藏就会在哪里！</strong>[^4]</p><h3 id="初中《钢铁是怎样炼成的》">初中《钢铁是怎样炼成的》</h3><p>： <a href="https://baike.baidu.com/item/%E5%89%8D%E8%8B%8F%E8%81%94/4742231?fromModule=lemma_inlink">前苏联</a>作家<a href="https://baike.baidu.com/item/%E5%B0%BC%E5%8F%A4%E6%8B%89%C2%B7%E5%A5%A5%E6%96%AF%E7%89%B9%E6%B4%9B%E5%A4%AB%E6%96%AF%E5%9F%BA/7871233?fromModule=lemma_inlink">尼古拉·奥斯特洛夫斯基</a> 所著的一部长篇小说，于1933年完成。</p><p><strong>“人最宝贵的是生命。生命属于人只有一次。人的一生应当这样度过：当他回首往事的时候，不会因为碌碌无为、虚度年华而悔恨，也不会因为为人卑劣、生活庸俗而愧疚。这样，在临终的时候，他就能够说：‘我已把自己整个的生命和全部的精力献给了世界上最壮丽的事业——为人类的解放而奋斗”</strong></p><p>​        一个有坚定意识的人值得赞赏，但不是一个有固执的政治意识的人。</p><h3 id="初中《全球通史-上下》">初中《全球通史  上下》</h3><p>：美国历史学家<a href="https://baike.baidu.com/item/L%C2%B7S%C2%B7%E6%96%AF%E5%A1%94%E5%A4%AB%E9%87%8C%E9%98%BF%E8%AF%BA%E6%96%AF/2648135?fromModule=lemma_inlink">L·S·斯塔夫里阿诺斯</a>创作的历史著作，首次出版于1970年</p><p><strong>“文明是诅咒还是福音？”</strong><br><strong>“由于他们依赖大自然，所以就为大自然所支配。”</strong><br>“语言的使用和工具制造是大脑发展的原因，也是大脑发展的结果。 ”<br>“<strong>自由</strong>是一种比僵化的宗教仪式和死板的教义更富有意义且令人满意的东西。”<br>“我们真正继承的是<strong>塑造和完善自身的能力</strong>，我们不是被动地接受塑造，而是<strong>自己命运的主宰</strong>。”<br><strong>“Every city is two cities, a city of the many poor and a city of the few rich; and these two cities are always at war. ”(Plato)</strong><br>“人类的本性是：一种能被社会影响塑造成许多表现形式的潜在能力…<strong>侵略性不是人类与生俱来和不可变更的特性</strong>，而是一个鼓励侵略的社会环境的产物。”<br>“中国人总是将家族的姓氏放在个人的名字之前，而不像西方那样将其放在个人的名字之后，这反映出了在<strong>中国社会中历来起主要作用的是家庭，而不是个人，国家或教会</strong>”<br>“人类作为一个种群所面临的问题是，如何解决<strong>自身知识的不断增长和如何运用这些知识的智慧相对滞后之间的矛盾</strong>。人类迫切需要学会在获得知识与运用知识的智慧之间达成平衡。”</p><h3 id="初中《人类的故事》">初中《人类的故事》</h3><p>：荷裔美国人，学者，作家，历史地理学家<a href="https://book.douban.com/author/4502151">亨德里克·威廉·房龙</a>创作</p><p><strong>“历史就像人生，许多东西不断改变，也有许多东西永远不变。”</strong><br>“好坏绝对分明的事情，在我们的历史上是鲜有的，纯粹的黑、白两色不可能构建起我们的世界。 ”<br>“繁荣意味着悠闲的时间，而闲暇则给了人们机会，让他们去购买书籍，培养对文学、艺术和音乐的兴趣。”<br><strong>“革命舞台上出现的经常是暴民，但毫无例外是中产阶级专业人士在背后煽风点火，他们利用饥饿的群众作为自己有力的盟军，向国王及其朝臣开战。”</strong></p><hr><h2 id="参考资料：">参考资料：</h2><p>[^3]:程姗姗. 《娱乐至死》的贡献及启示[J]. 文艺生活(文海艺苑), 2017, (10)<br>[^4]:豆瓣网<br>[^5]:吕黛，张煜著．解读英美文学中的智慧．哈尔滨工程大学出版社．2016.07．99<br>[^6]:现实主义、自然主义和浪漫主义相融合的巅峰之作——《野性的呼唤》浅析 李爱群 - 《时代文学》- 2011年16期</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2024年&quot;&gt;&lt;strong&gt;2024年&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;11月《股市真规则》&quot;&gt;11月《股市真规则》&lt;/h3&gt;
&lt;h3 id=&quot;11月《上海交通大学求生手册》&quot;&gt;11月《上海交通大学求生手册》&lt;/h3&gt;
&lt;h3 id=&quot;10月《宏观经</summary>
      
    
    
    
    <category term="推荐" scheme="https://stars-at-dawn.github.io/categories/%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="书籍" scheme="https://stars-at-dawn.github.io/tags/%E4%B9%A6%E7%B1%8D/"/>
    
    <category term="推荐" scheme="https://stars-at-dawn.github.io/tags/%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>合并排序</title>
    <link href="https://stars-at-dawn.github.io/posts/7"/>
    <id>https://stars-at-dawn.github.io/posts/7</id>
    <published>2024-06-06T03:07:31.000Z</published>
    <updated>2024-06-06T04:51:08.274Z</updated>
    
    <content type="html"><![CDATA[<p><strong>一个比较经典的的排序算法</strong></p><h2 id="合并排序的由来">合并排序的由来</h2><p><strong>归并排序</strong>（Merge Sort）是建立在归并操作上的一种有效，稳定的<a href="https://baike.baidu.com/item/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/5399605?fromModule=lemma_inlink">排序算法</a>，该算法是采用<a href="https://baike.baidu.com/item/%E5%88%86%E6%B2%BB%E6%B3%95/2407337?fromModule=lemma_inlink">分治法</a>（Divide and Conquer）的一个非常典型的应用。发明者<a href="https://baike.baidu.com/item/%E7%BA%A6%E7%BF%B0%C2%B7%E5%86%AF%C2%B7%E8%AF%BA%E4%BC%8A%E6%9B%BC/8790674?fromModule=lemma_inlink">约翰·冯·诺伊曼</a>[1]</p><h2 id="基本原理">基本原理</h2><p>将一个规模为n的问题分解为k个规模较小的子问题，这些子问题互相独立且原问题相同。递归地解这些子问题，然后将各子问题的解合并得到原问题的解。</p><p>第一步：申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列</p><p>第二步：设定两个指针，最初位置分别为两个已经排序序列的起始位置</p><p>第三步：比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置</p><p>重复步骤3直到某一指针超出序列尾</p><p>将另一序列剩下的所有元素直接复制到合并序列尾[1]</p><h2 id="代码实现">代码实现</h2><h3 id="递归版本">递归版本</h3><p>最重要的就是<strong>合并（merge）过程</strong></p><p>我们需要两边数组的范围进行合并排序<br>代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//l左起点 r右边界 mid左边界</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> mid)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> r - l + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span>[] arrHelp = <span class="keyword">new</span> <span class="title class_">int</span>[length];<span class="comment">//存放排序的数组</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//拷贝计数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> mid + <span class="number">1</span>; <span class="comment">//右指针</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> l; <span class="comment">//左指针</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (left &lt;= mid &amp;&amp; right &lt;= r) &#123;</span><br><span class="line">            arrHelp[index++] = </span><br><span class="line">                <span class="comment">//哪边数组小 拷贝 指针加一</span></span><br><span class="line">                arr[left] &lt; arr[right] ? arr[left++] : arr[right++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (left &lt;= mid) &#123;</span><br><span class="line">            <span class="comment">//右数组空了 左数组剩下的全部拷贝</span></span><br><span class="line">            arrHelp[index++] = arr[left++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (right &lt;= r) &#123;</span><br><span class="line">             <span class="comment">//左数组空了 同理</span></span><br><span class="line">            arrHelp[index++] = arr[right++];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> l; i &lt;= r; i++) &#123;</span><br><span class="line">            arr[i] = arrHelp[i - l]; <span class="comment">//拷贝到原数组</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>递归调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mergeSort</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> l, <span class="type">int</span> r)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr.length == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">if</span> (l == r) <span class="keyword">return</span>; <span class="comment">//basecase</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">//防止数据越界的求中值的写法</span></span><br><span class="line">  <span class="comment">//等于 （l + r）/2</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + ((r - l) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">      <span class="comment">//排序左边</span></span><br><span class="line">      mergeSort(arr, l, mid);</span><br><span class="line">      <span class="comment">//排序右边</span></span><br><span class="line">      mergeSort(arr, mid + <span class="number">1</span>, r);</span><br><span class="line">      <span class="comment">//左右合并</span></span><br><span class="line">      merge(arr, l, r, mid);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="非递归版本（优化空间复杂度）">非递归版本（优化空间复杂度）</h3><p>当然递归的版本空间复杂度不好所以进行优化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//非递归</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mergeSort</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    <span class="comment">//if (arr.length == 0) return;</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="variable">mergeSize</span> <span class="operator">=</span> <span class="number">1</span>;<span class="comment">//开始范围大小</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (mergeSize &lt; arr.length) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">L</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//初始位置</span></span><br><span class="line">        <span class="keyword">while</span> (L &lt; arr.length) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> L + mergeSize - <span class="number">1</span>;<span class="comment">//左边界</span></span><br><span class="line">            <span class="keyword">if</span> (mid &gt;= arr.length) <span class="keyword">break</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">R</span> <span class="operator">=</span> Math.min(mid + mergeSize, arr.length - <span class="number">1</span>);<span class="comment">//右边界</span></span><br><span class="line">            merge(arr, L, R, mid);<span class="comment">//合并排序</span></span><br><span class="line">            L = R + <span class="number">1</span>;<span class="comment">//下一个mergeSize</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//防止下面的翻倍溢出</span></span><br><span class="line">        <span class="keyword">if</span> (mergeSize &gt; arr.length / <span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">        mergeSize &lt;&lt;= <span class="number">1</span>;<span class="comment">//Size翻倍</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结">总结</h2><p>时间复杂度的函数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N*log(N))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">))</span></span></span></span></span></p><p>空间复杂度 即需要一个相同大小的临时数组</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></span></p><p>拷贝的时候可以保证相等是先拷贝左再拷贝右 所以是稳定的排序算法</p><h2 id="每日一句">每日一句</h2><p><strong><em>凭君莫话封候事，一将功成万骨枯</em> ————<a href="https://baike.baidu.com/item/%E6%9B%B9%E6%9D%BE/52063?fromModule=lemma_inlink">曹松</a>《己亥岁二首》</strong></p><h2 id="参考">参考</h2><ol><li>百度百科</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;一个比较经典的的排序算法&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;合并排序的由来&quot;&gt;合并排序的由来&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;归并排序&lt;/strong&gt;（Merge Sort）是建立在归并操作上的一种有效，稳定的&lt;a href=&quot;https://ba</summary>
      
    
    
    
    <category term="算法" scheme="https://stars-at-dawn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="经典" scheme="https://stars-at-dawn.github.io/categories/%E7%AE%97%E6%B3%95/%E7%BB%8F%E5%85%B8/"/>
    
    
    <category term="算法" scheme="https://stars-at-dawn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://stars-at-dawn.github.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="经典" scheme="https://stars-at-dawn.github.io/tags/%E7%BB%8F%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>排序算法大总结</title>
    <link href="https://stars-at-dawn.github.io/posts/6666"/>
    <id>https://stars-at-dawn.github.io/posts/6666</id>
    <published>2024-06-02T13:11:32.544Z</published>
    <updated>2024-06-06T03:48:12.627Z</updated>
    
    <content type="html"><![CDATA[<h1><em>简单的排序：</em>*</h1><h2 id="选择排序"><strong>选择排序</strong></h2><h2 id="插入排序"><strong>插入排序</strong></h2><h2 id="冒泡排序"><strong>冒泡排序</strong></h2><h3 id="时间复杂度"><strong>时间复杂度</strong></h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h3 id="空间复杂度："><strong>空间复杂度：</strong></h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><h1><strong>经典的排序：</strong></h1><h3 id="时间复杂度-2"><strong>时间复杂度</strong></h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N*log(N))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">))</span></span></span></span></span></p><h2 id="快排："><a href="https://stars-at-dawn.github.io/posts/123.html"><strong>快排：</strong></a></h2><h3 id="无稳定性（指是否能保留原来的顺序）"><strong>无稳定性</strong>（<strong>指是否能保留原来的顺序</strong>）</h3><h3 id="快排空间复杂度："><strong>快排空间复杂度：</strong></h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></span></p><h2 id="堆排："><a href="https://stars-at-dawn.github.io/posts/40634.html"><strong>堆排：</strong></a></h2><h3 id="无稳定性"><strong>无稳定性</strong></h3><h3 id="堆排空间复杂度："><strong>堆排空间复杂度：</strong></h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><h2 id="归并排序："><a href="(https://stars-at-dawn.github.io/posts/7.html)"><strong>归并排序：</strong></a></h2><h3 id="有稳定性"><strong>有稳定性</strong></h3><h3 id="归并排序空间复杂度："><strong>归并排序空间复杂度：</strong></h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></span></p><h1><strong>其它 根据实际条件限制的排序算法：</strong></h1><h2 id="桶排"><strong>桶排</strong></h2><h2 id="基数排序"><strong>基数排序</strong></h2><h3 id="时间复杂度-3"><strong>时间复杂度</strong></h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;em&gt;简单的排序：&lt;/em&gt;*&lt;/h1&gt;
&lt;h2 id=&quot;选择排序&quot;&gt;&lt;strong&gt;选择排序&lt;/strong&gt;&lt;/h2&gt;
&lt;h2 id=&quot;插入排序&quot;&gt;&lt;strong&gt;插入排序&lt;/strong&gt;&lt;/h2&gt;
&lt;h2 id=&quot;冒泡排序&quot;&gt;&lt;strong&gt;冒泡排序&lt;/stro</summary>
      
    
    
    
    <category term="算法" scheme="https://stars-at-dawn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="经典" scheme="https://stars-at-dawn.github.io/categories/%E7%AE%97%E6%B3%95/%E7%BB%8F%E5%85%B8/"/>
    
    
    <category term="算法" scheme="https://stars-at-dawn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://stars-at-dawn.github.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="经典" scheme="https://stars-at-dawn.github.io/tags/%E7%BB%8F%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>推荐书籍</title>
    <link href="https://stars-at-dawn.github.io/posts/62923"/>
    <id>https://stars-at-dawn.github.io/posts/62923</id>
    <published>2024-06-01T05:03:58.000Z</published>
    <updated>2024-06-04T05:17:48.254Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下一些我看完的书籍，以后有空的话可能会写写推荐语什么的♪(´▽｀)嘿嘿</p><p>排名不分先后，后面是推荐指数：</p><h3 id="历史："><strong>历史</strong>：</h3><p>《全球通史》（推荐指数★★★★★⚝，个人觉得上册比较好看 ）</p><p>《人类的故事》（推荐指数★★★★★⚝，书不是很枯燥，值得一看 ）</p><p>《红星照耀中国》（推荐指数★★★★⚝⚝）</p><p>《人类简史》（太久之前看的，不太记得了ψ(._. )&gt;暂时：★★★★⚝⚝）</p><h3 id="经济，政治，心理："><strong>经济</strong>，政治，心理：</h3><p>《乌合之众》（推荐指数★★★★★⚝）</p><p>《娱乐至死》（推荐指数★★★★★⚝）</p><p>《极简主义》（推荐指数★★★⚝⚝⚝）</p><p>《工作，消费主义和新穷人》（推荐指数★★★★★⚝）</p><h3 id="文学："><strong>文学</strong>：</h3><p>《1984》（值得细细回味，另外，他的一个短篇小说《动物庄园》）（推荐指数★★★★★★）</p><p>《局外人》（推荐指数★★★★★⚝）</p><p>《老人与海》（推荐指数★★★★★★）</p><p>《野性的呼唤》（推荐指数★★★★★★）</p><p>《牧羊少年奇幻之旅》（推荐指数★★★★★★，“马克图布” ）</p><p>《钢铁是怎样炼成的》（推荐指数★★★★★★）</p><p>《一个人的朝圣》（推荐指数★★★★★★）</p><p>《苏菲的世界》（推荐指数★★★★★⚝）</p><p>《西游记》《水浒传》（推荐指数★★★★★★）</p><p>《我是猫》（推荐指数★★★★⚝⚝）</p><p>《杀死一只知更鸟》（推荐指数★★★★★⚝）</p><h3 id="计算机相关："><strong>计算机相关</strong>：</h3><p>《Java并发编程的艺术》（推荐指数★★★★⚝⚝）</p><p>《Spring实战》（推荐指数★★★★⚝⚝）</p><p>《redis设计与实战》（推荐指数★★★★⚝⚝）</p><h3 id="其它：">其它：</h3><p>《催眠师手记》（推荐指数★★★★★★）</p><p>《天才在左，疯子在右》（推荐指数★★★★★★）</p><p>《三体》（推荐指数★★★★★★）</p><p>《福尔摩斯》（推荐指数★★★★★★）</p><p>《人生的智慧》（推荐指数★★★★★⚝）</p><p>《契诃夫小说集》（推荐指数★★★★★★）</p><h3 id=""></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记录一下一些我看完的书籍，以后有空的话可能会写写推荐语什么的♪(´▽｀)嘿嘿&lt;/p&gt;
&lt;p&gt;排名不分先后，后面是推荐指数：&lt;/p&gt;
&lt;h3 id=&quot;历史：&quot;&gt;&lt;strong&gt;历史&lt;/strong&gt;：&lt;/h3&gt;
&lt;p&gt;《全球通史》（推荐指数★★★★★⚝，个人觉得上册比较好看 </summary>
      
    
    
    
    <category term="推荐" scheme="https://stars-at-dawn.github.io/categories/%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="书籍" scheme="https://stars-at-dawn.github.io/tags/%E4%B9%A6%E7%B1%8D/"/>
    
    <category term="推荐" scheme="https://stars-at-dawn.github.io/tags/%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>堆排</title>
    <link href="https://stars-at-dawn.github.io/posts/40634"/>
    <id>https://stars-at-dawn.github.io/posts/40634</id>
    <published>2024-06-01T05:03:58.000Z</published>
    <updated>2024-06-04T05:17:48.255Z</updated>
    
    <content type="html"><![CDATA[<p><strong>一个比较经典的的排序算法</strong></p><h2 id="堆排的由来">堆排的由来</h2><p>堆排序（英语：Heapsort）是指利用二叉堆这种数据结构所设计的一种排序算法。由罗伯特·弗洛伊德发明。<br>罗伯特·弗洛伊德：<br>计算机科学家，<a href="https://baike.baidu.com/item/%E5%9B%BE%E7%81%B5%E5%A5%96/324645?fromModule=lemma_inlink">图灵奖</a>得主，前后断言法的<a href="https://baike.baidu.com/item/%E5%88%9B%E5%A7%8B%E4%BA%BA/36538?fromModule=lemma_inlink">创始人</a>，<a href="https://baike.baidu.com/item/%E5%A0%86%E6%8E%92%E5%BA%8F/0?fromModule=lemma_inlink">堆排序</a>算法和<a href="https://baike.baidu.com/item/Floyd-Warshall%E7%AE%97%E6%B3%95/9705345?fromModule=lemma_inlink">Floyd-Warshall算法</a>的创始人之一。[1]</p><h2 id="基本原理">基本原理</h2><p><strong>堆（特指大根堆）<strong>是一种特殊的</strong>二叉树</strong>，在堆的<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/0?fromModule=lemma_inlink">数据结构</a>中，堆中的<strong>最大值总是位于根节点。</strong><br><strong>堆排</strong>就是用<strong>数组</strong>存储堆的结构（<strong>层序遍历</strong>）并进行排序</p><p>如果<strong>初始索引是0</strong> 那么可以看出一个节点的<strong>左孩子索引</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>2</mn><mo>∗</mo><mi>N</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2*N+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p><strong>右孩子索引</strong> 为 <strong>左孩子索引</strong> <strong>+1</strong></p><p><strong>父节点索引</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[(index - 1) / 2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[(</span><span class="mord mathnormal">in</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/2</span><span class="mclose">]</span></span></span></span></span></p><p>然后对数组进行如下过程定义：</p><ol><li><p><strong>heapinsert：向堆中插入数据，并保持堆的特性</strong></p></li><li><p><strong>heapify：移除堆顶元素（即最大值），再重新组织堆的特性</strong></p></li></ol><h2 id="代码实现">代码实现</h2><p><strong>heapinsert：向堆中插入数据，并保持堆的特性</strong></p><p>因为前面的数组 已经调整好了，当我们插入尾部后只要比父节点大就往上移，同时与父节点的交换并不会影响下面的子节点的堆特性（因为父节点相对于子节点本来就是最大的）<br>（是一个从下往上的过程）</p><p><strong>代码如下：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">heapinsert</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> index)</span> &#123;</span><br><span class="line"><span class="comment">//只要大于原先父节点就往上跳</span></span><br><span class="line">    <span class="keyword">while</span> (arr[index] &gt; arr[(index - <span class="number">1</span>) / <span class="number">2</span>]) &#123;</span><br><span class="line">        TestMachine.swap(arr, index, (index - <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">        index = (index - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>heapify：移除堆顶元素（即最大值），再放入一个新值，再重新堆化</p><p>移除时只需要把堆的最后一个元素（即数组对应的索引）与堆顶的元素交换，对所用堆元素进行heapify过程，就可以实现数组的从小到大的排序（是一个从上往下的过程）</p><p><strong>代码如下：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index 当前索引（传入0） size 堆的规模</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">heapify</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> index, <span class="type">int</span> size)</span> &#123;</span><br><span class="line">    <span class="comment">//左孩子的索引</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">2</span> * index + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//没有越界就继续</span></span><br><span class="line">    <span class="keyword">while</span> (left &lt; size) &#123;</span><br><span class="line">        <span class="comment">//右孩子的索引</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> <span class="number">2</span> * index + <span class="number">2</span>;</span><br><span class="line">        <span class="comment">//需要交换的位置</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">exchange</span> <span class="operator">=</span> index;</span><br><span class="line">        <span class="keyword">if</span> (right &lt; size) </span><br><span class="line">            <span class="comment">//没有越界就继续</span></span><br><span class="line">            exchange =</span><br><span class="line">            <span class="comment">//右边是不是大于当前位置</span></span><br><span class="line">                arr[right] &gt; arr[index] ?      </span><br><span class="line">                        ( <span class="comment">//是 判断左边是否更大</span></span><br><span class="line">                                arr[right] &gt; arr[left] ? right : left </span><br><span class="line">                        )</span><br><span class="line">                        :</span><br><span class="line">                        ( <span class="comment">//不是 判断左边是否比当前位置大</span></span><br><span class="line">                                arr[left] &gt; arr[index] ? left : index</span><br><span class="line">                        );</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (arr[left] &gt; arr[index]) </span><br><span class="line">            <span class="comment">//右边越界判断左边是否是大于</span></span><br><span class="line">            exchange = left;</span><br><span class="line">        <span class="comment">//如果exchange改变则交换</span></span><br><span class="line">        <span class="keyword">if</span> (exchange != index) &#123;</span><br><span class="line">            <span class="comment">//数组对应的索引进行交换</span></span><br><span class="line">            TestMachine.swap(arr, exchange, index);</span><br><span class="line">            index = exchange;<span class="comment">//当前指针记录进行下一次heapify</span></span><br><span class="line">            left = <span class="number">2</span> * index + <span class="number">1</span>; <span class="comment">//计算左孩子的索引</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;<span class="comment">//没有改变 则堆的结构已经改变完成 退出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整个排序的算法</p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">heapSort</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (arr == <span class="literal">null</span> || arr.length == <span class="number">0</span> || arr.length == <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//O(N*logN) 可以优化</span></span><br><span class="line">    <span class="comment">//数组进行堆化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;<span class="comment">//O(N)</span></span><br><span class="line">        heapinsert(arr, i);<span class="comment">//O(logN)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开始排序</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> arr.length - <span class="number">1</span>;</span><br><span class="line">    TestMachine.swap(arr, <span class="number">0</span>, len);</span><br><span class="line">    <span class="keyword">while</span> (len &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//第一个数（最大值 ）移除 对剩余数据进行heapify 重新进行堆化 </span></span><br><span class="line">        <span class="comment">// 重复过程直到全部排序完成</span></span><br><span class="line">        heapify(arr, <span class="number">0</span>, len);</span><br><span class="line">        TestMachine.swap(arr, <span class="number">0</span>, --len);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="优化">优化</h2><p><strong>对上面的数组堆话过程可以继续进行优化</strong></p><p><strong>由于每次heapinsert都是一个logN的过程（即树的高度）</strong> 也就是<strong>时间复杂度O(N*logN)</strong></p><p>而如果我们<strong>从下往上</strong>来进行数组堆化</p><p>也就是修改成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//O(N)</span></span><br><span class="line"><span class="comment">//数组进行堆化</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> arr.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    heapify(arr, i, arr.length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>这些代码每一层（堆中）复杂度都是递增的</strong><br>但上面的代码是<strong>从上往下</strong>也就是<strong>底下数据量越多而且越复杂</strong><br>而优化后是<strong>从下往上</strong>也就是<strong>越往上越复杂 但数据量也越少</strong></p><p><strong>复杂度O(N)的证明：</strong></p><p>由于二叉树的特性 每层节点的heapify过程最多走层高 而每层节点的个数也可以通过二叉树的性质求出</p><p>所以从底层加到顶层的次数：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub><mo>=</mo><mfrac><mi>N</mi><mn>2</mn></mfrac><mo>∗</mo><mn>1</mn><mo>+</mo><mfrac><mi>N</mi><msup><mn>2</mn><mn>2</mn></msup></mfrac><mo>∗</mo><mn>2</mn><mo>+</mo><mfrac><mi>N</mi><msup><mn>2</mn><mn>3</mn></msup></mfrac><mo>∗</mo><mn>3</mn><mo>+</mo><mfrac><mi>N</mi><msup><mn>2</mn><mn>4</mn></msup></mfrac><mo>∗</mo><mn>4</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">S_n=\frac {N}{2}*1 + \frac {N}{2^2}*2 + \frac {N}{2^3}*3 + \frac {N}{2^4}*4 + ......</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">......</span></span></span></span></span></p><p>令</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>2</mn><msub><mi>S</mi><mi>n</mi></msub><mo>=</mo><mfrac><mi>N</mi><mn>2</mn></mfrac><mo>∗</mo><mn>2</mn><mo>+</mo><mfrac><mi>N</mi><msup><mn>2</mn><mn>1</mn></msup></mfrac><mo>∗</mo><mn>2</mn><mo>+</mo><mfrac><mi>N</mi><msup><mn>2</mn><mn>2</mn></msup></mfrac><mo>∗</mo><mn>3</mn><mo>+</mo><mfrac><mi>N</mi><msup><mn>2</mn><mn>3</mn></msup></mfrac><mo>∗</mo><mn>4</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">2S_n=\frac {N}{2}*2 + \frac {N}{2^1}*2 + \frac {N}{2^2}*3 + \frac {N}{2^3}*4 + ......</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">......</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>2</mn><msub><mi>S</mi><mi>n</mi></msub><mo>−</mo><msub><mi>S</mi><mi>n</mi></msub><mo>=</mo><mi>N</mi><mo>+</mo><mfrac><mi>N</mi><msup><mn>2</mn><mn>1</mn></msup></mfrac><mo>∗</mo><mn>1</mn><mo>+</mo><mfrac><mi>N</mi><msup><mn>2</mn><mn>2</mn></msup></mfrac><mo>∗</mo><mn>1</mn><mo>+</mo><mfrac><mi>N</mi><msup><mn>2</mn><mn>3</mn></msup></mfrac><mo>∗</mo><mn>1</mn><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">2S_n-S_n=N+\frac {N}{2^1}*1 + \frac {N}{2^2}*1 + \frac {N}{2^3}*1 + ......</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">......</span></span></span></span></span></p><p>后面就是一个等比数列求和（且q=1/2）由于时间复杂度<strong>只取高次</strong>位得<strong>复杂度O(N)</strong></p><h2 id="总结">总结</h2><p>时间复杂度的函数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N*log(N))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">))</span></span></span></span></span></p><p>空间复杂度 有限几个变量</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>由于堆的特性数据是无法保存顺序的所以是一个不稳定的排序算法</p><h2 id="每日一句">每日一句</h2><p>如果印钞票能消除贫困的话，那么印文凭也就可以消除愚蠢了。——阿根廷总统 哈维尔·米莱</p><h2 id="参考">参考</h2><ol><li>百度百科</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;一个比较经典的的排序算法&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;堆排的由来&quot;&gt;堆排的由来&lt;/h2&gt;
&lt;p&gt;堆排序（英语：Heapsort）是指利用二叉堆这种数据结构所设计的一种排序算法。由罗伯特·弗洛伊德发明。&lt;br&gt;
罗伯特·弗洛伊德：&lt;br&gt;
计算机</summary>
      
    
    
    
    <category term="算法" scheme="https://stars-at-dawn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="经典" scheme="https://stars-at-dawn.github.io/categories/%E7%AE%97%E6%B3%95/%E7%BB%8F%E5%85%B8/"/>
    
    
    <category term="算法" scheme="https://stars-at-dawn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://stars-at-dawn.github.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="经典" scheme="https://stars-at-dawn.github.io/tags/%E7%BB%8F%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>快速排序</title>
    <link href="https://stars-at-dawn.github.io/posts/123"/>
    <id>https://stars-at-dawn.github.io/posts/123</id>
    <published>2024-06-01T05:03:58.000Z</published>
    <updated>2024-06-04T05:20:35.377Z</updated>
    
    <content type="html"><![CDATA[<p><strong>一个比较经典的的排序算法</strong></p><h2 id="快速排序的由来">快速排序的由来</h2><p>快速排序（英语：Quicksort），又称分区交换排序（英语：partition-exchange sort），简称「快排」</p><p>英国计算机科学家Tony Hoare在1960年为了解决计算机上的排序问题，提出了快速排序的算法，最初是为了在英国的英尔兰电子公司（ELLIOTT Brothers）的快速硬件上实现高效的排序算法。[1]</p><h2 id="基本原理">基本原理</h2><p>快速排序的工作原理是通过递归中的<strong>分治</strong>思想的方式来将一个数组排序。</p><ol><li><p>从待排序的数组中选择一个元素，称之为枢纽元（pivot）。</p></li><li><p>将数组中小于枢纽元的元素移到枢纽元的左边，将大于枢纽元的元素移到枢纽元的右边，这个过程称为分区（partition）。</p></li><li><p>递归地对枢纽元左边的子数组和右边的子数组进行排序。</p></li><li><p>当所有子数组都有序时，整个数组就自然有序了。</p></li></ol><h2 id="代码实现">代码实现</h2><p>整个流程最重要的就是<strong>partition过程</strong>了：</p><p>从待排序的数组中选择一个元素当作基准；</p><p>左右分别设置一个指针（也就是小于和大于那个基准的范围）；</p><p>再建立一个当前指针进行遍历：</p><p>当大于基准时：当前位置与左边界的前一个交换，左边界右移加一，当前指针++；</p><p>当小于基准时：当前位置与右边界的前一个交换，右边界左移减一，当前指针++；</p><p>当等于基准时：当前指针++；</p><p>接着对两边的数组在进行<strong>partition过程</strong>，相当于进行<strong>递归调用</strong></p><p>代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] partition(<span class="type">int</span>[] arr, <span class="type">int</span> num) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> arr.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; right; ) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &gt; num) &#123;</span><br><span class="line">                swap(arr, i, right - <span class="number">1</span>);</span><br><span class="line">                right--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &lt; num) &#123;</span><br><span class="line">                swap(arr, i, left + <span class="number">1</span>);</span><br><span class="line">                i++;</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] == num) i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回左右边界 下次递归需要使用</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;left + <span class="number">1</span>, right&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//数组元素交换</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == j) <span class="keyword">return</span>;</span><br><span class="line">        arr[i] = arr[i] ^ arr[j];</span><br><span class="line">        arr[j] = arr[i] ^ arr[j];</span><br><span class="line">        arr[i] = arr[i] ^ arr[j];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="随即快排（优化）">随即快排（优化）</h2><p>但是num的选择有一点讲究，</p><p>如果我们每次都选固定的位置会造成：数据情况会对时间复杂度造成影响</p><p>比如 <strong>1，2，3，4，5，6，7，8，9</strong> 这样的数据</p><p>那每次我们都选<strong>最后一个做基准</strong>就会发现每次只能排好最后一个数</p><p>时间复杂度将<strong>退化为N平方</strong></p><p>所以我们引入一个随机快排的概念，即随机选一个数做基准，经过概率计算得出期望时间复杂度的函数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N*log(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></span></p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">quickSort</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> l, <span class="type">int</span> r)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (arr == <span class="literal">null</span> || arr.length == <span class="number">0</span> || arr.length == <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">       <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">       <span class="type">int</span>[] partition = partition(arr, l, r);</span><br><span class="line">      <span class="comment">//对两边的数组在进行partition过程，递归调用</span></span><br><span class="line">       quickSort(arr, l, partition[<span class="number">0</span>] - <span class="number">1</span>);</span><br><span class="line">       quickSort(arr, partition[<span class="number">1</span>] + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] partition(<span class="type">int</span>[] arr, <span class="type">int</span> l, <span class="type">int</span> r) &#123;</span><br><span class="line">       <span class="keyword">if</span> (l &gt; r) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;-<span class="number">1</span>, -<span class="number">1</span>&#125;;</span><br><span class="line">       <span class="keyword">if</span> (l == r) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;l, r&#125;;</span><br><span class="line">       <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> l - <span class="number">1</span>;</span><br><span class="line">       <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> r;</span><br><span class="line">       <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">       <span class="comment">//随机选值</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">randomNum</span> <span class="operator">=</span> random.nextInt(r - l + <span class="number">1</span>) + l;</span><br><span class="line">       <span class="comment">//放到最后 避免影响排序</span></span><br><span class="line">       swap(arr, randomNum, r);</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> l; i &lt; right; ) &#123;</span><br><span class="line">           <span class="keyword">if</span> (arr[i] &gt; arr[r]) swap(arr, i, --right);</span><br><span class="line">           <span class="keyword">if</span> (arr[i] &lt; arr[r]) swap(arr, i++, ++left);</span><br><span class="line">           <span class="keyword">if</span> (arr[i] == arr[r]) i++;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//选的值进行插入</span></span><br><span class="line">       swap(arr, right, r);</span><br><span class="line">       <span class="comment">//返回左右边界 下次递归需要使用</span></span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;left + <span class="number">1</span>, right&#125;;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组元素交换</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (i == j) <span class="keyword">return</span>;</span><br><span class="line">       arr[i] = arr[i] ^ arr[j];</span><br><span class="line">       arr[j] = arr[i] ^ arr[j];</span><br><span class="line">       arr[i] = arr[i] ^ arr[j];</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>当然实际 排序时可以<strong>根据数据情况</strong>来进行选择使用排序方式</p><p>如短数据采用插入排序等；</p><h2 id="总结">总结</h2><p>时间复杂度的函数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N*log(N))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">))</span></span></span></span></span></p><p>空间复杂度 即递归栈的空间复杂度</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log(N))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">))</span></span></span></span></span></p><p>由于随机选择的特性不能保证原先的顺序所以是一个不稳定的排序算法</p><h2 id="每日一句">每日一句</h2><p><em><strong>多数人在25岁时就死了，一直到75岁才埋葬   —— 富兰克林</strong></em> [2]</p><h2 id="参考">参考</h2><ol><li>Wiki百科</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;一个比较经典的的排序算法&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;快速排序的由来&quot;&gt;快速排序的由来&lt;/h2&gt;
&lt;p&gt;快速排序（英语：Quicksort），又称分区交换排序（英语：partition-exchange sort），简称「快排」&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="算法" scheme="https://stars-at-dawn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="经典" scheme="https://stars-at-dawn.github.io/categories/%E7%AE%97%E6%B3%95/%E7%BB%8F%E5%85%B8/"/>
    
    
    <category term="算法" scheme="https://stars-at-dawn.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://stars-at-dawn.github.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="经典" scheme="https://stars-at-dawn.github.io/tags/%E7%BB%8F%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>本地与云端不一致</title>
    <link href="https://stars-at-dawn.github.io/posts/41171"/>
    <id>https://stars-at-dawn.github.io/posts/41171</id>
    <published>2024-05-30T06:19:38.000Z</published>
    <updated>2024-06-04T05:17:48.252Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前面碰到过地测试正常但是上传后的页面错误</strong></p><p>解决方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo deploy</span><br><span class="line"></span><br><span class="line">前者清除站点文件，后者重新生成并将之推送到指定的库分支。</span><br></pre></td></tr></table></figure><p>**建议每次更新都需要hexo clean **</p><p>当然<strong>游览器缓存</strong>也可能是一个问题，不过过一会就会正常。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;前面碰到过地测试正常但是上传后的页面错误&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class</summary>
      
    
    
    
    <category term="博客搭建的一些问题汇总" scheme="https://stars-at-dawn.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
    
    <category term="butterflyx主题" scheme="https://stars-at-dawn.github.io/tags/butterflyx%E4%B8%BB%E9%A2%98/"/>
    
    <category term="博客搭建" scheme="https://stars-at-dawn.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="问题汇总" scheme="https://stars-at-dawn.github.io/tags/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>创建特殊文档</title>
    <link href="https://stars-at-dawn.github.io/posts/15129"/>
    <id>https://stars-at-dawn.github.io/posts/15129</id>
    <published>2024-05-30T05:40:11.000Z</published>
    <updated>2024-06-04T05:17:48.251Z</updated>
    
    <content type="html"><![CDATA[<p>创建分类总览页代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>创建标签总览页代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>创建About总览页代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p><strong>注</strong>：</p><p>网址路径结尾是“/”的话 会自动加载对应目录的index.html</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">也就是  http://localhost:4000/tags/ 加载的是tags目录下的index.html 而不是tags.html </span><br></pre></td></tr></table></figure><p>上面前两个文档文件需要手动生成，但里面的内容会自动生成 。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;创建分类总览页代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class</summary>
      
    
    
    
    <category term="博客搭建的一些问题汇总" scheme="https://stars-at-dawn.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
    
    <category term="butterflyx主题" scheme="https://stars-at-dawn.github.io/tags/butterflyx%E4%B8%BB%E9%A2%98/"/>
    
    <category term="博客搭建" scheme="https://stars-at-dawn.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="问题汇总" scheme="https://stars-at-dawn.github.io/tags/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>博客config配置</title>
    <link href="https://stars-at-dawn.github.io/posts/8702"/>
    <id>https://stars-at-dawn.github.io/posts/8702</id>
    <published>2024-05-30T05:38:01.000Z</published>
    <updated>2024-06-04T05:17:48.252Z</updated>
    
    <content type="html"><![CDATA[<p>初始配置文件（config那个没有别的后缀）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="comment"># 网站显示的标题 随意填</span></span><br><span class="line"><span class="attr">author:</span> <span class="comment"># 你的名字 随意填</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:username/username.github.io.git</span>  <span class="comment"># 要是GitHub改名了，记得这里改一下</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span> <span class="comment"># 仓库名称</span></span><br></pre></td></tr></table></figure><p>主题配置文件常见配置（我所有是butterflyx主题）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Avatar (头像设置)</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span>  <span class="comment"># url</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Favicon（网站的图标）</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/img/myFavicon.png</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="comment"># display the cover or not (是否顯示文章封面)</span></span><br><span class="line">  <span class="attr">default_cover:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">/img/***.***</span>  <span class="comment"># 默认封面 对应文档的cover参数 可以是GIF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Menu 目錄</span></span><br><span class="line"><span class="attr">menu:</span> <span class="comment"># 右上角的选项</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">---     </span></span><br><span class="line"><span class="comment"># Sponsor/reward</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">text:</span></span><br><span class="line">  <span class="attr">QR_code:</span> <span class="comment">#二维码设置</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/***.png</span></span><br><span class="line">       <span class="attr">link:</span> <span class="comment"># 链接</span></span><br><span class="line">       <span class="attr">text:</span> <span class="comment"># 图片下面显示的文本</span></span><br><span class="line">       </span><br><span class="line"> <span class="string">---</span></span><br><span class="line"><span class="comment"># 网站优化</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># canvas_ribbon:  背景彩帶设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects 鼠标点击效果设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Loading Animation (加载动画设置)</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;初始配置文件（config那个没有别的后缀）&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="博客搭建的一些问题汇总" scheme="https://stars-at-dawn.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
    
    <category term="butterflyx主题" scheme="https://stars-at-dawn.github.io/tags/butterflyx%E4%B8%BB%E9%A2%98/"/>
    
    <category term="博客搭建" scheme="https://stars-at-dawn.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="问题汇总" scheme="https://stars-at-dawn.github.io/tags/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>打印汉诺塔过程</title>
    <link href="https://stars-at-dawn.github.io/posts/11859"/>
    <id>https://stars-at-dawn.github.io/posts/11859</id>
    <published>2024-05-30T03:37:03.000Z</published>
    <updated>2024-06-04T05:17:48.257Z</updated>
    
    <content type="html"><![CDATA[<p><strong>用代码实现 打印汉诺塔最优解的过程</strong></p><p>废话少说咱们直接开始(‾◡◝)</p><p>首先先来看看汉诺塔问题的定义：</p><p>汉诺塔（Tower of Hanoi），又称河内塔，是一个源于<a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%E5%8D%B0%E5%BA%A6/121904%3FfromModule%3Dlemma_inlink">印度</a>古老传说的<a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%E7%9B%8A%E6%99%BA%E7%8E%A9%E5%85%B7/223159%3FfromModule%3Dlemma_inlink">益智玩具</a>。大<a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%E6%A2%B5%E5%A4%A9/2453640%3FfromModule%3Dlemma_inlink">梵天</a>创造世界的时候做了三根<a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%E9%87%91%E5%88%9A%E7%9F%B3/80698%3FfromModule%3Dlemma_inlink">金刚石</a>柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。<a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%E5%A4%A7%E6%A2%B5%E5%A4%A9/711550%3FfromModule%3Dlemma_inlink">大梵天</a>命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。[<a href="https://www.zhihu.com/people/10-16-96-85/posts#ref_1">1]</a></p><p>那我们简化一下问题：变成三个圆盘，毕竟我们也买不起这么多黄金圆盘</p><p>（才不是我懒~(￣▽￣)~*）</p><p>如图我们要移动三个圆盘到最边上，而且小圆盘上不能放大圆盘</p><p><img src="https://pic3.zhimg.com/80/v2-be4e82ef46d6c2569a68d49a34311806_1440w.webp" alt="img"></p><p>那我们分析要让所用圆盘移到右边，很显然根据规则可以知道<strong>最下面的圆盘</strong>肯定要<strong>先移到最右边</strong>，不然移动别的大的就放不下了；</p><p>同时也可以看出：</p><p>要让最下面的圆盘移到最右边，就要让<strong>它上面的圆盘移到中间</strong>（就像把大象塞进冰箱要怎么办的问题一样）</p><p>顺着思路也就可以分析它上面的圆盘移到中间的问题，如果把<strong>中间的杆子当成右边的（即目标杆）</strong>，那问题就变成两层的汉诺塔问题了（底层的那个金盘你会发现有没有都无所谓），那就很显然是一个递归问题了，下面直接写代码（本文采用java）：</p><p>（写递归就写过程，不要去太纠结结果）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//让所用圆盘移到右边    </span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">leftToRight</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="comment">//basecase</span></span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;move&quot;</span> + n + <span class="string">&quot;left to right&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        leftToMid(n - <span class="number">1</span>);<span class="comment">//让它上面的圆盘移到中间</span></span><br><span class="line">        System.out.println(<span class="string">&quot;move&quot;</span> + n + <span class="string">&quot;left to right&quot;</span>);</span><br><span class="line">        midToRight(n - <span class="number">1</span>);<span class="comment">//让它上面的圆盘从中间移到右边完成整个过程</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>同理写出 leftToMid(n -1) midToRight(n -1)的过程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">leftToMid</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;move&quot;</span> + n + <span class="string">&quot;left to mid&quot;</span>);</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       leftToRight(n - <span class="number">1</span>);<span class="comment">//都是一样的</span></span><br><span class="line">       System.out.println(<span class="string">&quot;move&quot;</span> + n + <span class="string">&quot;left to mid&quot;</span>);</span><br><span class="line">       rightToMid(n - <span class="number">1</span>);<span class="comment">//完成整个过程</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">rightToMid</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;move&quot;</span> + n + <span class="string">&quot;right to mid&quot;</span>);</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       rightToLeft(n - <span class="number">1</span>);<span class="comment">//都是一样的</span></span><br><span class="line">       System.out.println(<span class="string">&quot;move&quot;</span> + n + <span class="string">&quot;right to mid&quot;</span>);</span><br><span class="line">       leftToMid(n - <span class="number">1</span>);<span class="comment">//完成整个过程</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>其它的从左从中间。。。我想应该不用我写了把（才不是我懒o(^▽^)o）</p><p>但这么长显然代码并不好看，而且能发现递归过程有大量共性，考虑优化一下</p><p>将当前位置和目标位置抽象出来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当前位置和目标位置 还有剩余位置抽象出来   </span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fromTo</span><span class="params">(String from, String other, String to, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;move&quot;</span> + n + from + <span class="string">&quot; to &quot;</span> + to);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fromTo(from, to, other, n - <span class="number">1</span>);<span class="comment">//other 和 to交换位置 代表当前圆盘的上面的圆盘移到剩余位置</span></span><br><span class="line">        System.out.println(<span class="string">&quot;move&quot;</span> + n + from + <span class="string">&quot; to &quot;</span> + to);</span><br><span class="line">        fromTo(other, from, to, n - <span class="number">1</span>);<span class="comment">//代表当前圆盘的上面的圆盘移到目标位置</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>大功告成，我相信你也对递归有了更好的理解了吧</p><p>不过有个小彩蛋，那就是你会发现这个递归次数成指数增长</p><p><strong>因为</strong>从递归式可以看出</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f(n)=2f(n-1)+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>推出----&gt;</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(n)+1=2(f(n)+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>k</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>k</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k(n)=2k(n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>有了<strong>递推式</strong>就可以写出 <strong>f(n)</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>k</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn><mo>=</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f(n)=k(n)-1=2^n-1 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7977em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>也就是n层汉诺塔至少需要这么多步</p><p>也就是说<strong>64片黄金</strong>圆盘需要移动 <strong>18446744073709551615</strong>次？？？那故事里的金盘移动完怕不是地球都没了</p><p>( ‵▽′)ψ</p><p>（ps：第一次写，如果有什么不好的欢迎指出( •̀ ω •́ )y）下次见</p><p>每日一句：</p><p>上善若水，水善利万物而不争。[<a href="https://www.zhihu.com/people/10-16-96-85/posts#ref_2">2]</a></p><h2 id="参考">参考</h2><ol><li><a href="https://www.zhihu.com/people/10-16-96-85/posts#ref_1_0">^</a>百度百科</li><li><a href="https://www.zhihu.com/people/10-16-96-85/posts#ref_2_0">^</a>老子《道德经》</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;用代码实现 打印汉诺塔最优解的过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;废话少说咱们直接开始(‾◡◝)&lt;/p&gt;
&lt;p&gt;首先先来看看汉诺塔问题的定义：&lt;/p&gt;
&lt;p&gt;汉诺塔（Tower of Hanoi），又称河内塔，是一个源于&lt;a href=&quot;https://l</summary>
      
    
    
    
    <category term="算法" scheme="https://stars-at-dawn.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="经典算法" scheme="https://stars-at-dawn.github.io/tags/%E7%BB%8F%E5%85%B8%E7%AE%97%E6%B3%95/"/>
    
    <category term="汉诺塔" scheme="https://stars-at-dawn.github.io/tags/%E6%B1%89%E8%AF%BA%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>学成在线项目介绍</title>
    <link href="https://stars-at-dawn.github.io/posts/42876"/>
    <id>https://stars-at-dawn.github.io/posts/42876</id>
    <published>2024-05-27T14:04:20.000Z</published>
    <updated>2024-06-04T05:17:48.247Z</updated>
    
    <content type="html"><![CDATA[<h1>学成在线</h1><h4 id="介绍">介绍</h4><p>本项目基于<strong>黑马程序员</strong>的 <em>《学成在线》</em> 项目搭建 仅供学习参考<br>在线教育行业是一个有着极强的广度和深度的行业，从校内到校外；从早幼教到职业培训；从教育工具到全信息化平台等等。</p><p>学成在线项目是本公司自研的一个专门针对成人职业技能教育的网络课堂系统，网站提供了成人职业技能培训的相关课程，如：软件开发培训、职业资格证书培训、成人学历教育培训等课程。项目基于B2B2C的业务模式，培训机构可以在平台入驻、发布课程，运营人员对发布的课程进行审核，审核通过后课程才可以发布成功，课程包括免费和收费两种形式，对于免费课程可以直接选课学习，对于收费课程在选课后需要支付成功才可以继续学习。</p><span id="more"></span><h4 id="软件架构">软件架构</h4><p>本项目包括了用户端、机构端、运营端。</p><p>核心模块包括：内容管理、媒资管理、课程搜索、订单支付、选课管理、认证授权等。</p><p>下图是项目的功能模块图：</p><img src="https://xuecheng-rzf.oss-cn-beijing.aliyuncs.com/gitee_readme/%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97%E5%9B%BE.png" style="zoom:150%;" /><p>本项目采用前后端分离架构，后端采用SpringBoot、SpringCloud技术栈开发，数据库使用了MySQL，还使用的Redis、消息队列、分布式文件系统、Elasticsearch等中间件系统。</p><p>划分的微服务包括：内容管理服务、媒资管理服务、搜索服务、订单支付服务、 学习中心服务、系统管理服务、认证授权服务、网关服务、注册中心服务、配置中心服务等。</p><p>下图是项目的技术架构图：</p><img src="https://xuecheng-rzf.oss-cn-beijing.aliyuncs.com/gitee_readme/%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84%E5%9B%BE.png" style="zoom:150%;" /><h4 id="安装教程">安装教程</h4><ol><li>项目基于JDK1.8环境开发，使用Mavne构建项目工程</li></ol><h4 id="使用说明">使用说明</h4><ol><li><p>教学机构的老师登录教学管理平台，编辑课程信息，发布自己的课程。</p></li><li><p>平台运营人员登录运营平台审核课程、视频等信息，审核通过后课程方可发布。</p></li><li><p>课程发布后学生登录平台进行选课、在线学习。免费课程可直接学习，收费课程需要下单购买。</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1&gt;学成在线&lt;/h1&gt;
&lt;h4 id=&quot;介绍&quot;&gt;介绍&lt;/h4&gt;
&lt;p&gt;本项目基于&lt;strong&gt;黑马程序员&lt;/strong&gt;的 &lt;em&gt;《学成在线》&lt;/em&gt; 项目搭建 仅供学习参考&lt;br&gt;
在线教育行业是一个有着极强的广度和深度的行业，从校内到校外；从早幼教到职业培训；从教育工具到全信息化平台等等。&lt;/p&gt;
&lt;p&gt;学成在线项目是本公司自研的一个专门针对成人职业技能教育的网络课堂系统，网站提供了成人职业技能培训的相关课程，如：软件开发培训、职业资格证书培训、成人学历教育培训等课程。项目基于B2B2C的业务模式，培训机构可以在平台入驻、发布课程，运营人员对发布的课程进行审核，审核通过后课程才可以发布成功，课程包括免费和收费两种形式，对于免费课程可以直接选课学习，对于收费课程在选课后需要支付成功才可以继续学习。&lt;/p&gt;</summary>
    
    
    
    <category term="项目" scheme="https://stars-at-dawn.github.io/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="项目介绍" scheme="https://stars-at-dawn.github.io/tags/%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>文档上的注释</title>
    <link href="https://stars-at-dawn.github.io/posts/33714"/>
    <id>https://stars-at-dawn.github.io/posts/33714</id>
    <published>2024-05-27T14:04:20.000Z</published>
    <updated>2024-06-04T05:17:48.253Z</updated>
    
    <content type="html"><![CDATA[<p>Front-matter 采用 YAML  格式</p><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: # 标题</span><br><span class="line">date: # 日期</span><br><span class="line">tags: # 标签</span><br><span class="line">- </span><br><span class="line">categories: # 分类</span><br><span class="line">-</span><br><span class="line">cover: /img/***.jpg # 封面 相对路径或者使用网址</span><br><span class="line">indexing: false #  生成的搜素（此功能需要手动开启）结果将不包含此帖子或页面</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>可以参考<a href="https://hexo.io/zh-cn/docs/front-matter">官方文档</a></p><p><strong>注意事项</strong>：</p><p>title 不建议写中文或者网站采用hash算法（避免网址中文乱码）</p><p>采用hash算法设置（主路径下的_config配置中的下面位置）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://***.github.io</span></span><br><span class="line"><span class="comment"># 改这里 原先是 :year/:month/:day/:title/ -&gt; :year/:month/:day/:hash/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:hash/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>小技巧</strong>：</p><p>微软输入法快速输入日期的方法：</p><p>可以去右下角输入法的地方右键点击设置 --&gt; 找到词库 --&gt; 然后添加自定义短语 --&gt;</p><p>关键词自己定义  映射短语设置：%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%</p><p>就可以快速输入时间了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Front-matter 采用 YAML  格式&lt;/p&gt;
&lt;p&gt;源码：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span</summary>
      
    
    
    
    <category term="博客搭建的一些问题汇总" scheme="https://stars-at-dawn.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
    
    <category term="butterflyx主题" scheme="https://stars-at-dawn.github.io/tags/butterflyx%E4%B8%BB%E9%A2%98/"/>
    
    <category term="博客搭建" scheme="https://stars-at-dawn.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="问题汇总" scheme="https://stars-at-dawn.github.io/tags/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>推荐关注</title>
    <link href="https://stars-at-dawn.github.io/posts/22031"/>
    <id>https://stars-at-dawn.github.io/posts/22031</id>
    <published>2024-05-27T14:04:20.000Z</published>
    <updated>2024-06-04T05:17:48.254Z</updated>
    
    <content type="html"><![CDATA[<p>B站</p><p><strong>老陌Ss</strong> UID：1343324216</p><p><strong>左神（左程云）的算法课</strong> （我个人认为最好的算法课没有之一）</p><p><strong>极海Channel</strong> UID：1525355</p><p><strong>我的B站号</strong></p><p><strong>长夜有晨星</strong> UID：95747099</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;B站&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;老陌Ss&lt;/strong&gt; UID：1343324216&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;左神（左程云）的算法课&lt;/strong&gt; （我个人认为最好的算法课没有之一）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;极海Channel&lt;/strong&gt; UI</summary>
      
    
    
    
    <category term="推荐" scheme="https://stars-at-dawn.github.io/categories/%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="推荐" scheme="https://stars-at-dawn.github.io/tags/%E6%8E%A8%E8%8D%90/"/>
    
    <category term="博主" scheme="https://stars-at-dawn.github.io/tags/%E5%8D%9A%E4%B8%BB/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://stars-at-dawn.github.io/posts/16107"/>
    <id>https://stars-at-dawn.github.io/posts/16107</id>
    <published>2024-05-27T13:49:58.027Z</published>
    <updated>2024-06-04T05:17:48.250Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
